// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: repeated_scalars.proto
// Protobuf C++ Version: 5.29.3

#ifndef repeated_5fscalars_2eproto_2epb_2eh
#define repeated_5fscalars_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_repeated_5fscalars_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_repeated_5fscalars_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_repeated_5fscalars_2eproto;
class RepeatedScalars;
struct RepeatedScalarsDefaultTypeInternal;
extern RepeatedScalarsDefaultTypeInternal _RepeatedScalars_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum ReEnum : int {
  R_ZERO = 0,
  R_ONE = 1,
  R_TWO = 2,
  ReEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ReEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ReEnum_IsValid(int value);
extern const uint32_t ReEnum_internal_data_[];
constexpr ReEnum ReEnum_MIN = static_cast<ReEnum>(0);
constexpr ReEnum ReEnum_MAX = static_cast<ReEnum>(2);
constexpr int ReEnum_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ReEnum_descriptor();
template <typename T>
const std::string& ReEnum_Name(T value) {
  static_assert(std::is_same<T, ReEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ReEnum_Name().");
  return ReEnum_Name(static_cast<ReEnum>(value));
}
template <>
inline const std::string& ReEnum_Name(ReEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ReEnum_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ReEnum_Parse(absl::string_view name, ReEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReEnum>(
      ReEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class RepeatedScalars final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RepeatedScalars) */ {
 public:
  inline RepeatedScalars() : RepeatedScalars(nullptr) {}
  ~RepeatedScalars() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RepeatedScalars* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RepeatedScalars));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RepeatedScalars(
      ::google::protobuf::internal::ConstantInitialized);

  inline RepeatedScalars(const RepeatedScalars& from) : RepeatedScalars(nullptr, from) {}
  inline RepeatedScalars(RepeatedScalars&& from) noexcept
      : RepeatedScalars(nullptr, std::move(from)) {}
  inline RepeatedScalars& operator=(const RepeatedScalars& from) {
    CopyFrom(from);
    return *this;
  }
  inline RepeatedScalars& operator=(RepeatedScalars&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RepeatedScalars& default_instance() {
    return *internal_default_instance();
  }
  static inline const RepeatedScalars* internal_default_instance() {
    return reinterpret_cast<const RepeatedScalars*>(
        &_RepeatedScalars_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RepeatedScalars& a, RepeatedScalars& b) { a.Swap(&b); }
  inline void Swap(RepeatedScalars* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RepeatedScalars* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RepeatedScalars* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RepeatedScalars>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RepeatedScalars& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RepeatedScalars& from) { RepeatedScalars::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RepeatedScalars* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "RepeatedScalars"; }

 protected:
  explicit RepeatedScalars(::google::protobuf::Arena* arena);
  RepeatedScalars(::google::protobuf::Arena* arena, const RepeatedScalars& from);
  RepeatedScalars(::google::protobuf::Arena* arena, RepeatedScalars&& from) noexcept
      : RepeatedScalars(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRInt32DefaultPackedFieldNumber = 1,
    kRSint32UnpackedFieldNumber = 2,
    kRFixed32PackedFieldNumber = 3,
    kRDoubleUnpackedFieldNumber = 4,
    kREnumsDefaultPackedFieldNumber = 5,
    kRStringsFieldNumber = 6,
    kRBytesFieldNumber = 7,
  };
  // repeated int32 r_int32_default_packed = 1;
  int r_int32_default_packed_size() const;
  private:
  int _internal_r_int32_default_packed_size() const;

  public:
  void clear_r_int32_default_packed() ;
  ::int32_t r_int32_default_packed(int index) const;
  void set_r_int32_default_packed(int index, ::int32_t value);
  void add_r_int32_default_packed(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& r_int32_default_packed() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_r_int32_default_packed();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_r_int32_default_packed() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_r_int32_default_packed();

  public:
  // repeated sint32 r_sint32_unpacked = 2 [packed = false];
  int r_sint32_unpacked_size() const;
  private:
  int _internal_r_sint32_unpacked_size() const;

  public:
  void clear_r_sint32_unpacked() ;
  ::int32_t r_sint32_unpacked(int index) const;
  void set_r_sint32_unpacked(int index, ::int32_t value);
  void add_r_sint32_unpacked(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& r_sint32_unpacked() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_r_sint32_unpacked();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_r_sint32_unpacked() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_r_sint32_unpacked();

  public:
  // repeated fixed32 r_fixed32_packed = 3;
  int r_fixed32_packed_size() const;
  private:
  int _internal_r_fixed32_packed_size() const;

  public:
  void clear_r_fixed32_packed() ;
  ::uint32_t r_fixed32_packed(int index) const;
  void set_r_fixed32_packed(int index, ::uint32_t value);
  void add_r_fixed32_packed(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& r_fixed32_packed() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_r_fixed32_packed();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_r_fixed32_packed() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_r_fixed32_packed();

  public:
  // repeated double r_double_unpacked = 4 [packed = false];
  int r_double_unpacked_size() const;
  private:
  int _internal_r_double_unpacked_size() const;

  public:
  void clear_r_double_unpacked() ;
  double r_double_unpacked(int index) const;
  void set_r_double_unpacked(int index, double value);
  void add_r_double_unpacked(double value);
  const ::google::protobuf::RepeatedField<double>& r_double_unpacked() const;
  ::google::protobuf::RepeatedField<double>* mutable_r_double_unpacked();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_r_double_unpacked() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_r_double_unpacked();

  public:
  // repeated .ReEnum r_enums_default_packed = 5;
  int r_enums_default_packed_size() const;
  private:
  int _internal_r_enums_default_packed_size() const;

  public:
  void clear_r_enums_default_packed() ;
  public:
  ::ReEnum r_enums_default_packed(int index) const;
  void set_r_enums_default_packed(int index, ::ReEnum value);
  void add_r_enums_default_packed(::ReEnum value);
  const ::google::protobuf::RepeatedField<int>& r_enums_default_packed() const;
  ::google::protobuf::RepeatedField<int>* mutable_r_enums_default_packed();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_r_enums_default_packed() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_r_enums_default_packed();

  public:
  // repeated string r_strings = 6;
  int r_strings_size() const;
  private:
  int _internal_r_strings_size() const;

  public:
  void clear_r_strings() ;
  const std::string& r_strings(int index) const;
  std::string* mutable_r_strings(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_r_strings(int index, Arg_&& value, Args_... args);
  std::string* add_r_strings();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_r_strings(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& r_strings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_r_strings();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_r_strings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_r_strings();

  public:
  // repeated bytes r_bytes = 7;
  int r_bytes_size() const;
  private:
  int _internal_r_bytes_size() const;

  public:
  void clear_r_bytes() ;
  const std::string& r_bytes(int index) const;
  std::string* mutable_r_bytes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_r_bytes(int index, Arg_&& value, Args_... args);
  std::string* add_r_bytes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_r_bytes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& r_bytes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_r_bytes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_r_bytes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_r_bytes();

  public:
  // @@protoc_insertion_point(class_scope:RepeatedScalars)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      33, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RepeatedScalars& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> r_int32_default_packed_;
    ::google::protobuf::internal::CachedSize _r_int32_default_packed_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> r_sint32_unpacked_;
    ::google::protobuf::RepeatedField<::uint32_t> r_fixed32_packed_;
    ::google::protobuf::RepeatedField<double> r_double_unpacked_;
    ::google::protobuf::RepeatedField<int> r_enums_default_packed_;
    ::google::protobuf::internal::CachedSize _r_enums_default_packed_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> r_strings_;
    ::google::protobuf::RepeatedPtrField<std::string> r_bytes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_repeated_5fscalars_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RepeatedScalars

// repeated int32 r_int32_default_packed = 1;
inline int RepeatedScalars::_internal_r_int32_default_packed_size() const {
  return _internal_r_int32_default_packed().size();
}
inline int RepeatedScalars::r_int32_default_packed_size() const {
  return _internal_r_int32_default_packed_size();
}
inline void RepeatedScalars::clear_r_int32_default_packed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_int32_default_packed_.Clear();
}
inline ::int32_t RepeatedScalars::r_int32_default_packed(int index) const {
  // @@protoc_insertion_point(field_get:RepeatedScalars.r_int32_default_packed)
  return _internal_r_int32_default_packed().Get(index);
}
inline void RepeatedScalars::set_r_int32_default_packed(int index, ::int32_t value) {
  _internal_mutable_r_int32_default_packed()->Set(index, value);
  // @@protoc_insertion_point(field_set:RepeatedScalars.r_int32_default_packed)
}
inline void RepeatedScalars::add_r_int32_default_packed(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_r_int32_default_packed()->Add(value);
  // @@protoc_insertion_point(field_add:RepeatedScalars.r_int32_default_packed)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RepeatedScalars::r_int32_default_packed() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedScalars.r_int32_default_packed)
  return _internal_r_int32_default_packed();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RepeatedScalars::mutable_r_int32_default_packed()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedScalars.r_int32_default_packed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_r_int32_default_packed();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
RepeatedScalars::_internal_r_int32_default_packed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_int32_default_packed_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RepeatedScalars::_internal_mutable_r_int32_default_packed() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.r_int32_default_packed_;
}

// repeated sint32 r_sint32_unpacked = 2 [packed = false];
inline int RepeatedScalars::_internal_r_sint32_unpacked_size() const {
  return _internal_r_sint32_unpacked().size();
}
inline int RepeatedScalars::r_sint32_unpacked_size() const {
  return _internal_r_sint32_unpacked_size();
}
inline void RepeatedScalars::clear_r_sint32_unpacked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_sint32_unpacked_.Clear();
}
inline ::int32_t RepeatedScalars::r_sint32_unpacked(int index) const {
  // @@protoc_insertion_point(field_get:RepeatedScalars.r_sint32_unpacked)
  return _internal_r_sint32_unpacked().Get(index);
}
inline void RepeatedScalars::set_r_sint32_unpacked(int index, ::int32_t value) {
  _internal_mutable_r_sint32_unpacked()->Set(index, value);
  // @@protoc_insertion_point(field_set:RepeatedScalars.r_sint32_unpacked)
}
inline void RepeatedScalars::add_r_sint32_unpacked(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_r_sint32_unpacked()->Add(value);
  // @@protoc_insertion_point(field_add:RepeatedScalars.r_sint32_unpacked)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RepeatedScalars::r_sint32_unpacked() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedScalars.r_sint32_unpacked)
  return _internal_r_sint32_unpacked();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RepeatedScalars::mutable_r_sint32_unpacked()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedScalars.r_sint32_unpacked)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_r_sint32_unpacked();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
RepeatedScalars::_internal_r_sint32_unpacked() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_sint32_unpacked_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RepeatedScalars::_internal_mutable_r_sint32_unpacked() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.r_sint32_unpacked_;
}

// repeated fixed32 r_fixed32_packed = 3;
inline int RepeatedScalars::_internal_r_fixed32_packed_size() const {
  return _internal_r_fixed32_packed().size();
}
inline int RepeatedScalars::r_fixed32_packed_size() const {
  return _internal_r_fixed32_packed_size();
}
inline void RepeatedScalars::clear_r_fixed32_packed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_fixed32_packed_.Clear();
}
inline ::uint32_t RepeatedScalars::r_fixed32_packed(int index) const {
  // @@protoc_insertion_point(field_get:RepeatedScalars.r_fixed32_packed)
  return _internal_r_fixed32_packed().Get(index);
}
inline void RepeatedScalars::set_r_fixed32_packed(int index, ::uint32_t value) {
  _internal_mutable_r_fixed32_packed()->Set(index, value);
  // @@protoc_insertion_point(field_set:RepeatedScalars.r_fixed32_packed)
}
inline void RepeatedScalars::add_r_fixed32_packed(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_r_fixed32_packed()->Add(value);
  // @@protoc_insertion_point(field_add:RepeatedScalars.r_fixed32_packed)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& RepeatedScalars::r_fixed32_packed() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedScalars.r_fixed32_packed)
  return _internal_r_fixed32_packed();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* RepeatedScalars::mutable_r_fixed32_packed()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedScalars.r_fixed32_packed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_r_fixed32_packed();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
RepeatedScalars::_internal_r_fixed32_packed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_fixed32_packed_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* RepeatedScalars::_internal_mutable_r_fixed32_packed() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.r_fixed32_packed_;
}

// repeated double r_double_unpacked = 4 [packed = false];
inline int RepeatedScalars::_internal_r_double_unpacked_size() const {
  return _internal_r_double_unpacked().size();
}
inline int RepeatedScalars::r_double_unpacked_size() const {
  return _internal_r_double_unpacked_size();
}
inline void RepeatedScalars::clear_r_double_unpacked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_double_unpacked_.Clear();
}
inline double RepeatedScalars::r_double_unpacked(int index) const {
  // @@protoc_insertion_point(field_get:RepeatedScalars.r_double_unpacked)
  return _internal_r_double_unpacked().Get(index);
}
inline void RepeatedScalars::set_r_double_unpacked(int index, double value) {
  _internal_mutable_r_double_unpacked()->Set(index, value);
  // @@protoc_insertion_point(field_set:RepeatedScalars.r_double_unpacked)
}
inline void RepeatedScalars::add_r_double_unpacked(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_r_double_unpacked()->Add(value);
  // @@protoc_insertion_point(field_add:RepeatedScalars.r_double_unpacked)
}
inline const ::google::protobuf::RepeatedField<double>& RepeatedScalars::r_double_unpacked() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedScalars.r_double_unpacked)
  return _internal_r_double_unpacked();
}
inline ::google::protobuf::RepeatedField<double>* RepeatedScalars::mutable_r_double_unpacked()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedScalars.r_double_unpacked)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_r_double_unpacked();
}
inline const ::google::protobuf::RepeatedField<double>&
RepeatedScalars::_internal_r_double_unpacked() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_double_unpacked_;
}
inline ::google::protobuf::RepeatedField<double>* RepeatedScalars::_internal_mutable_r_double_unpacked() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.r_double_unpacked_;
}

// repeated .ReEnum r_enums_default_packed = 5;
inline int RepeatedScalars::_internal_r_enums_default_packed_size() const {
  return _internal_r_enums_default_packed().size();
}
inline int RepeatedScalars::r_enums_default_packed_size() const {
  return _internal_r_enums_default_packed_size();
}
inline void RepeatedScalars::clear_r_enums_default_packed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_enums_default_packed_.Clear();
}
inline ::ReEnum RepeatedScalars::r_enums_default_packed(int index) const {
  // @@protoc_insertion_point(field_get:RepeatedScalars.r_enums_default_packed)
  return static_cast<::ReEnum>(_internal_r_enums_default_packed().Get(index));
}
inline void RepeatedScalars::set_r_enums_default_packed(int index, ::ReEnum value) {
  _internal_mutable_r_enums_default_packed()->Set(index, value);
  // @@protoc_insertion_point(field_set:RepeatedScalars.r_enums_default_packed)
}
inline void RepeatedScalars::add_r_enums_default_packed(::ReEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_r_enums_default_packed()->Add(value);
  // @@protoc_insertion_point(field_add:RepeatedScalars.r_enums_default_packed)
}
inline const ::google::protobuf::RepeatedField<int>& RepeatedScalars::r_enums_default_packed() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedScalars.r_enums_default_packed)
  return _internal_r_enums_default_packed();
}
inline ::google::protobuf::RepeatedField<int>* RepeatedScalars::mutable_r_enums_default_packed()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedScalars.r_enums_default_packed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_r_enums_default_packed();
}
inline const ::google::protobuf::RepeatedField<int>& RepeatedScalars::_internal_r_enums_default_packed()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_enums_default_packed_;
}
inline ::google::protobuf::RepeatedField<int>* RepeatedScalars::_internal_mutable_r_enums_default_packed() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.r_enums_default_packed_;
}

// repeated string r_strings = 6;
inline int RepeatedScalars::_internal_r_strings_size() const {
  return _internal_r_strings().size();
}
inline int RepeatedScalars::r_strings_size() const {
  return _internal_r_strings_size();
}
inline void RepeatedScalars::clear_r_strings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_strings_.Clear();
}
inline std::string* RepeatedScalars::add_r_strings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_r_strings()->Add();
  // @@protoc_insertion_point(field_add_mutable:RepeatedScalars.r_strings)
  return _s;
}
inline const std::string& RepeatedScalars::r_strings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RepeatedScalars.r_strings)
  return _internal_r_strings().Get(index);
}
inline std::string* RepeatedScalars::mutable_r_strings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RepeatedScalars.r_strings)
  return _internal_mutable_r_strings()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RepeatedScalars::set_r_strings(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_r_strings()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:RepeatedScalars.r_strings)
}
template <typename Arg_, typename... Args_>
inline void RepeatedScalars::add_r_strings(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_r_strings(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:RepeatedScalars.r_strings)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RepeatedScalars::r_strings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedScalars.r_strings)
  return _internal_r_strings();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RepeatedScalars::mutable_r_strings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedScalars.r_strings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_r_strings();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RepeatedScalars::_internal_r_strings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_strings_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RepeatedScalars::_internal_mutable_r_strings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.r_strings_;
}

// repeated bytes r_bytes = 7;
inline int RepeatedScalars::_internal_r_bytes_size() const {
  return _internal_r_bytes().size();
}
inline int RepeatedScalars::r_bytes_size() const {
  return _internal_r_bytes_size();
}
inline void RepeatedScalars::clear_r_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_bytes_.Clear();
}
inline std::string* RepeatedScalars::add_r_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_r_bytes()->Add();
  // @@protoc_insertion_point(field_add_mutable:RepeatedScalars.r_bytes)
  return _s;
}
inline const std::string& RepeatedScalars::r_bytes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RepeatedScalars.r_bytes)
  return _internal_r_bytes().Get(index);
}
inline std::string* RepeatedScalars::mutable_r_bytes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RepeatedScalars.r_bytes)
  return _internal_mutable_r_bytes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RepeatedScalars::set_r_bytes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_r_bytes()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:RepeatedScalars.r_bytes)
}
template <typename Arg_, typename... Args_>
inline void RepeatedScalars::add_r_bytes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_r_bytes(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:RepeatedScalars.r_bytes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RepeatedScalars::r_bytes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedScalars.r_bytes)
  return _internal_r_bytes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RepeatedScalars::mutable_r_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedScalars.r_bytes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_r_bytes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RepeatedScalars::_internal_r_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_bytes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RepeatedScalars::_internal_mutable_r_bytes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.r_bytes_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ReEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ReEnum>() {
  return ::ReEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // repeated_5fscalars_2eproto_2epb_2eh
