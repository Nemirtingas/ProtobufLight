// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: oneof_all.proto
// Protobuf C++ Version: 5.29.3

#ifndef oneof_5fall_2eproto_2epb_2eh
#define oneof_5fall_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_oneof_5fall_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_oneof_5fall_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_oneof_5fall_2eproto;
class OneMsg;
struct OneMsgDefaultTypeInternal;
extern OneMsgDefaultTypeInternal _OneMsg_default_instance_;
class OneOfAll;
struct OneOfAllDefaultTypeInternal;
extern OneOfAllDefaultTypeInternal _OneOfAll_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum OneEnum : int {
  O_ZERO = 0,
  O_ONE = 1,
  OneEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OneEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OneEnum_IsValid(int value);
extern const uint32_t OneEnum_internal_data_[];
constexpr OneEnum OneEnum_MIN = static_cast<OneEnum>(0);
constexpr OneEnum OneEnum_MAX = static_cast<OneEnum>(1);
constexpr int OneEnum_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
OneEnum_descriptor();
template <typename T>
const std::string& OneEnum_Name(T value) {
  static_assert(std::is_same<T, OneEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OneEnum_Name().");
  return OneEnum_Name(static_cast<OneEnum>(value));
}
template <>
inline const std::string& OneEnum_Name(OneEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OneEnum_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool OneEnum_Parse(absl::string_view name, OneEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OneEnum>(
      OneEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OneMsg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OneMsg) */ {
 public:
  inline OneMsg() : OneMsg(nullptr) {}
  ~OneMsg() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OneMsg* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OneMsg));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OneMsg(
      ::google::protobuf::internal::ConstantInitialized);

  inline OneMsg(const OneMsg& from) : OneMsg(nullptr, from) {}
  inline OneMsg(OneMsg&& from) noexcept
      : OneMsg(nullptr, std::move(from)) {}
  inline OneMsg& operator=(const OneMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline OneMsg& operator=(OneMsg&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OneMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const OneMsg* internal_default_instance() {
    return reinterpret_cast<const OneMsg*>(
        &_OneMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OneMsg& a, OneMsg& b) { a.Swap(&b); }
  inline void Swap(OneMsg* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OneMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OneMsg* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OneMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OneMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OneMsg& from) { OneMsg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OneMsg* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OneMsg"; }

 protected:
  explicit OneMsg(::google::protobuf::Arena* arena);
  OneMsg(::google::protobuf::Arena* arena, const OneMsg& from);
  OneMsg(::google::protobuf::Arena* arena, OneMsg&& from) noexcept
      : OneMsg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:OneMsg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OneMsg& from_msg);
    ::int32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_oneof_5fall_2eproto;
};
// -------------------------------------------------------------------

class OneOfAll final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OneOfAll) */ {
 public:
  inline OneOfAll() : OneOfAll(nullptr) {}
  ~OneOfAll() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OneOfAll* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OneOfAll));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OneOfAll(
      ::google::protobuf::internal::ConstantInitialized);

  inline OneOfAll(const OneOfAll& from) : OneOfAll(nullptr, from) {}
  inline OneOfAll(OneOfAll&& from) noexcept
      : OneOfAll(nullptr, std::move(from)) {}
  inline OneOfAll& operator=(const OneOfAll& from) {
    CopyFrom(from);
    return *this;
  }
  inline OneOfAll& operator=(OneOfAll&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OneOfAll& default_instance() {
    return *internal_default_instance();
  }
  enum ChoiceCase {
    kOInt32 = 1,
    kOBytes = 3,
    kOMsg = 4,
    kOEnum = 5,
    CHOICE_NOT_SET = 0,
  };
  static inline const OneOfAll* internal_default_instance() {
    return reinterpret_cast<const OneOfAll*>(
        &_OneOfAll_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OneOfAll& a, OneOfAll& b) { a.Swap(&b); }
  inline void Swap(OneOfAll* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OneOfAll* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OneOfAll* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OneOfAll>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OneOfAll& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OneOfAll& from) { OneOfAll::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OneOfAll* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OneOfAll"; }

 protected:
  explicit OneOfAll(::google::protobuf::Arena* arena);
  OneOfAll(::google::protobuf::Arena* arena, const OneOfAll& from);
  OneOfAll(::google::protobuf::Arena* arena, OneOfAll&& from) noexcept
      : OneOfAll(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOInt32FieldNumber = 1,
    kOBytesFieldNumber = 3,
    kOMsgFieldNumber = 4,
    kOEnumFieldNumber = 5,
  };
  // int32 o_int32 = 1;
  bool has_o_int32() const;
  void clear_o_int32() ;
  ::int32_t o_int32() const;
  void set_o_int32(::int32_t value);

  private:
  ::int32_t _internal_o_int32() const;
  void _internal_set_o_int32(::int32_t value);

  public:
  // bytes o_bytes = 3;
  bool has_o_bytes() const;
  void clear_o_bytes() ;
  const std::string& o_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_o_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_o_bytes();
  PROTOBUF_NODISCARD std::string* release_o_bytes();
  void set_allocated_o_bytes(std::string* value);

  private:
  const std::string& _internal_o_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_o_bytes(
      const std::string& value);
  std::string* _internal_mutable_o_bytes();

  public:
  // .OneMsg o_msg = 4;
  bool has_o_msg() const;
  private:
  bool _internal_has_o_msg() const;

  public:
  void clear_o_msg() ;
  const ::OneMsg& o_msg() const;
  PROTOBUF_NODISCARD ::OneMsg* release_o_msg();
  ::OneMsg* mutable_o_msg();
  void set_allocated_o_msg(::OneMsg* value);
  void unsafe_arena_set_allocated_o_msg(::OneMsg* value);
  ::OneMsg* unsafe_arena_release_o_msg();

  private:
  const ::OneMsg& _internal_o_msg() const;
  ::OneMsg* _internal_mutable_o_msg();

  public:
  // .OneEnum o_enum = 5;
  bool has_o_enum() const;
  void clear_o_enum() ;
  ::OneEnum o_enum() const;
  void set_o_enum(::OneEnum value);

  private:
  ::OneEnum _internal_o_enum() const;
  void _internal_set_o_enum(::OneEnum value);

  public:
  void clear_choice();
  ChoiceCase choice_case() const;
  // @@protoc_insertion_point(class_scope:OneOfAll)
 private:
  class _Internal;
  void set_has_o_int32();
  void set_has_o_bytes();
  void set_has_o_msg();
  void set_has_o_enum();
  inline bool has_choice() const;
  inline void clear_has_choice();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OneOfAll& from_msg);
    union ChoiceUnion {
      constexpr ChoiceUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t o_int32_;
      ::google::protobuf::internal::ArenaStringPtr o_bytes_;
      ::OneMsg* o_msg_;
      int o_enum_;
    } choice_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_oneof_5fall_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OneMsg

// int32 id = 1;
inline void OneMsg::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t OneMsg::id() const {
  // @@protoc_insertion_point(field_get:OneMsg.id)
  return _internal_id();
}
inline void OneMsg::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:OneMsg.id)
}
inline ::int32_t OneMsg::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void OneMsg::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// OneOfAll

// int32 o_int32 = 1;
inline bool OneOfAll::has_o_int32() const {
  return choice_case() == kOInt32;
}
inline void OneOfAll::set_has_o_int32() {
  _impl_._oneof_case_[0] = kOInt32;
}
inline void OneOfAll::clear_o_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (choice_case() == kOInt32) {
    _impl_.choice_.o_int32_ = 0;
    clear_has_choice();
  }
}
inline ::int32_t OneOfAll::o_int32() const {
  // @@protoc_insertion_point(field_get:OneOfAll.o_int32)
  return _internal_o_int32();
}
inline void OneOfAll::set_o_int32(::int32_t value) {
  if (choice_case() != kOInt32) {
    clear_choice();
    set_has_o_int32();
  }
  _impl_.choice_.o_int32_ = value;
  // @@protoc_insertion_point(field_set:OneOfAll.o_int32)
}
inline ::int32_t OneOfAll::_internal_o_int32() const {
  if (choice_case() == kOInt32) {
    return _impl_.choice_.o_int32_;
  }
  return 0;
}

// bytes o_bytes = 3;
inline bool OneOfAll::has_o_bytes() const {
  return choice_case() == kOBytes;
}
inline void OneOfAll::set_has_o_bytes() {
  _impl_._oneof_case_[0] = kOBytes;
}
inline void OneOfAll::clear_o_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (choice_case() == kOBytes) {
    _impl_.choice_.o_bytes_.Destroy();
    clear_has_choice();
  }
}
inline const std::string& OneOfAll::o_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OneOfAll.o_bytes)
  return _internal_o_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OneOfAll::set_o_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (choice_case() != kOBytes) {
    clear_choice();

    set_has_o_bytes();
    _impl_.choice_.o_bytes_.InitDefault();
  }
  _impl_.choice_.o_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:OneOfAll.o_bytes)
}
inline std::string* OneOfAll::mutable_o_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_o_bytes();
  // @@protoc_insertion_point(field_mutable:OneOfAll.o_bytes)
  return _s;
}
inline const std::string& OneOfAll::_internal_o_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (choice_case() != kOBytes) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.choice_.o_bytes_.Get();
}
inline void OneOfAll::_internal_set_o_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (choice_case() != kOBytes) {
    clear_choice();

    set_has_o_bytes();
    _impl_.choice_.o_bytes_.InitDefault();
  }
  _impl_.choice_.o_bytes_.Set(value, GetArena());
}
inline std::string* OneOfAll::_internal_mutable_o_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (choice_case() != kOBytes) {
    clear_choice();

    set_has_o_bytes();
    _impl_.choice_.o_bytes_.InitDefault();
  }
  return _impl_.choice_.o_bytes_.Mutable( GetArena());
}
inline std::string* OneOfAll::release_o_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:OneOfAll.o_bytes)
  if (choice_case() != kOBytes) {
    return nullptr;
  }
  clear_has_choice();
  return _impl_.choice_.o_bytes_.Release();
}
inline void OneOfAll::set_allocated_o_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_choice()) {
    clear_choice();
  }
  if (value != nullptr) {
    set_has_o_bytes();
    _impl_.choice_.o_bytes_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:OneOfAll.o_bytes)
}

// .OneMsg o_msg = 4;
inline bool OneOfAll::has_o_msg() const {
  return choice_case() == kOMsg;
}
inline bool OneOfAll::_internal_has_o_msg() const {
  return choice_case() == kOMsg;
}
inline void OneOfAll::set_has_o_msg() {
  _impl_._oneof_case_[0] = kOMsg;
}
inline void OneOfAll::clear_o_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (choice_case() == kOMsg) {
    if (GetArena() == nullptr) {
      delete _impl_.choice_.o_msg_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.choice_.o_msg_);
    }
    clear_has_choice();
  }
}
inline ::OneMsg* OneOfAll::release_o_msg() {
  // @@protoc_insertion_point(field_release:OneOfAll.o_msg)
  if (choice_case() == kOMsg) {
    clear_has_choice();
    auto* temp = _impl_.choice_.o_msg_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.choice_.o_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::OneMsg& OneOfAll::_internal_o_msg() const {
  return choice_case() == kOMsg ? *_impl_.choice_.o_msg_ : reinterpret_cast<::OneMsg&>(::_OneMsg_default_instance_);
}
inline const ::OneMsg& OneOfAll::o_msg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OneOfAll.o_msg)
  return _internal_o_msg();
}
inline ::OneMsg* OneOfAll::unsafe_arena_release_o_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:OneOfAll.o_msg)
  if (choice_case() == kOMsg) {
    clear_has_choice();
    auto* temp = _impl_.choice_.o_msg_;
    _impl_.choice_.o_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OneOfAll::unsafe_arena_set_allocated_o_msg(::OneMsg* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_choice();
  if (value) {
    set_has_o_msg();
    _impl_.choice_.o_msg_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:OneOfAll.o_msg)
}
inline ::OneMsg* OneOfAll::_internal_mutable_o_msg() {
  if (choice_case() != kOMsg) {
    clear_choice();
    set_has_o_msg();
    _impl_.choice_.o_msg_ =
        ::google::protobuf::Message::DefaultConstruct<::OneMsg>(GetArena());
  }
  return _impl_.choice_.o_msg_;
}
inline ::OneMsg* OneOfAll::mutable_o_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::OneMsg* _msg = _internal_mutable_o_msg();
  // @@protoc_insertion_point(field_mutable:OneOfAll.o_msg)
  return _msg;
}

// .OneEnum o_enum = 5;
inline bool OneOfAll::has_o_enum() const {
  return choice_case() == kOEnum;
}
inline void OneOfAll::set_has_o_enum() {
  _impl_._oneof_case_[0] = kOEnum;
}
inline void OneOfAll::clear_o_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (choice_case() == kOEnum) {
    _impl_.choice_.o_enum_ = 0;
    clear_has_choice();
  }
}
inline ::OneEnum OneOfAll::o_enum() const {
  // @@protoc_insertion_point(field_get:OneOfAll.o_enum)
  return _internal_o_enum();
}
inline void OneOfAll::set_o_enum(::OneEnum value) {
  if (choice_case() != kOEnum) {
    clear_choice();
    set_has_o_enum();
  }
  _impl_.choice_.o_enum_ = value;
  // @@protoc_insertion_point(field_set:OneOfAll.o_enum)
}
inline ::OneEnum OneOfAll::_internal_o_enum() const {
  if (choice_case() == kOEnum) {
    return static_cast<::OneEnum>(_impl_.choice_.o_enum_);
  }
  return static_cast<::OneEnum>(0);
}

inline bool OneOfAll::has_choice() const {
  return choice_case() != CHOICE_NOT_SET;
}
inline void OneOfAll::clear_has_choice() {
  _impl_._oneof_case_[0] = CHOICE_NOT_SET;
}
inline OneOfAll::ChoiceCase OneOfAll::choice_case() const {
  return OneOfAll::ChoiceCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::OneEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::OneEnum>() {
  return ::OneEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // oneof_5fall_2eproto_2epb_2eh
