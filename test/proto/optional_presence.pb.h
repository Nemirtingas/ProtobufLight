// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: optional_presence.proto
// Protobuf C++ Version: 5.29.3

#ifndef optional_5fpresence_2eproto_2epb_2eh
#define optional_5fpresence_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_optional_5fpresence_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_optional_5fpresence_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_optional_5fpresence_2eproto;
class OptionalPresence;
struct OptionalPresenceDefaultTypeInternal;
extern OptionalPresenceDefaultTypeInternal _OptionalPresence_default_instance_;
class OptionalPresence_HasPresence;
struct OptionalPresence_HasPresenceDefaultTypeInternal;
extern OptionalPresence_HasPresenceDefaultTypeInternal _OptionalPresence_HasPresence_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum OptEnum : int {
  OPT_ZERO = 0,
  OPT_ONE = 1,
  OptEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OptEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OptEnum_IsValid(int value);
extern const uint32_t OptEnum_internal_data_[];
constexpr OptEnum OptEnum_MIN = static_cast<OptEnum>(0);
constexpr OptEnum OptEnum_MAX = static_cast<OptEnum>(1);
constexpr int OptEnum_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
OptEnum_descriptor();
template <typename T>
const std::string& OptEnum_Name(T value) {
  static_assert(std::is_same<T, OptEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OptEnum_Name().");
  return OptEnum_Name(static_cast<OptEnum>(value));
}
template <>
inline const std::string& OptEnum_Name(OptEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OptEnum_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool OptEnum_Parse(absl::string_view name, OptEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OptEnum>(
      OptEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OptionalPresence_HasPresence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OptionalPresence.HasPresence) */ {
 public:
  inline OptionalPresence_HasPresence() : OptionalPresence_HasPresence(nullptr) {}
  ~OptionalPresence_HasPresence() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OptionalPresence_HasPresence* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OptionalPresence_HasPresence));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptionalPresence_HasPresence(
      ::google::protobuf::internal::ConstantInitialized);

  inline OptionalPresence_HasPresence(const OptionalPresence_HasPresence& from) : OptionalPresence_HasPresence(nullptr, from) {}
  inline OptionalPresence_HasPresence(OptionalPresence_HasPresence&& from) noexcept
      : OptionalPresence_HasPresence(nullptr, std::move(from)) {}
  inline OptionalPresence_HasPresence& operator=(const OptionalPresence_HasPresence& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptionalPresence_HasPresence& operator=(OptionalPresence_HasPresence&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OptionalPresence_HasPresence& default_instance() {
    return *internal_default_instance();
  }
  static inline const OptionalPresence_HasPresence* internal_default_instance() {
    return reinterpret_cast<const OptionalPresence_HasPresence*>(
        &_OptionalPresence_HasPresence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OptionalPresence_HasPresence& a, OptionalPresence_HasPresence& b) { a.Swap(&b); }
  inline void Swap(OptionalPresence_HasPresence* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptionalPresence_HasPresence* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptionalPresence_HasPresence* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OptionalPresence_HasPresence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OptionalPresence_HasPresence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OptionalPresence_HasPresence& from) { OptionalPresence_HasPresence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OptionalPresence_HasPresence* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OptionalPresence.HasPresence"; }

 protected:
  explicit OptionalPresence_HasPresence(::google::protobuf::Arena* arena);
  OptionalPresence_HasPresence(::google::protobuf::Arena* arena, const OptionalPresence_HasPresence& from);
  OptionalPresence_HasPresence(::google::protobuf::Arena* arena, OptionalPresence_HasPresence&& from) noexcept
      : OptionalPresence_HasPresence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
  };
  // int32 x = 1;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:OptionalPresence.HasPresence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OptionalPresence_HasPresence& from_msg);
    ::int32_t x_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_optional_5fpresence_2eproto;
};
// -------------------------------------------------------------------

class OptionalPresence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OptionalPresence) */ {
 public:
  inline OptionalPresence() : OptionalPresence(nullptr) {}
  ~OptionalPresence() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OptionalPresence* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OptionalPresence));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptionalPresence(
      ::google::protobuf::internal::ConstantInitialized);

  inline OptionalPresence(const OptionalPresence& from) : OptionalPresence(nullptr, from) {}
  inline OptionalPresence(OptionalPresence&& from) noexcept
      : OptionalPresence(nullptr, std::move(from)) {}
  inline OptionalPresence& operator=(const OptionalPresence& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptionalPresence& operator=(OptionalPresence&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OptionalPresence& default_instance() {
    return *internal_default_instance();
  }
  static inline const OptionalPresence* internal_default_instance() {
    return reinterpret_cast<const OptionalPresence*>(
        &_OptionalPresence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OptionalPresence& a, OptionalPresence& b) { a.Swap(&b); }
  inline void Swap(OptionalPresence* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptionalPresence* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptionalPresence* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OptionalPresence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OptionalPresence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OptionalPresence& from) { OptionalPresence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OptionalPresence* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OptionalPresence"; }

 protected:
  explicit OptionalPresence(::google::protobuf::Arena* arena);
  OptionalPresence(::google::protobuf::Arena* arena, const OptionalPresence& from);
  OptionalPresence(::google::protobuf::Arena* arena, OptionalPresence&& from) noexcept
      : OptionalPresence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using HasPresence = OptionalPresence_HasPresence;

  // accessors -------------------------------------------------------
  enum : int {
    kOStringFieldNumber = 2,
    kMsgFieldNumber = 10,
    kOInt32FieldNumber = 1,
    kOEnumFieldNumber = 3,
  };
  // optional string o_string = 2;
  bool has_o_string() const;
  void clear_o_string() ;
  const std::string& o_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_o_string(Arg_&& arg, Args_... args);
  std::string* mutable_o_string();
  PROTOBUF_NODISCARD std::string* release_o_string();
  void set_allocated_o_string(std::string* value);

  private:
  const std::string& _internal_o_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_o_string(
      const std::string& value);
  std::string* _internal_mutable_o_string();

  public:
  // .OptionalPresence.HasPresence msg = 10;
  bool has_msg() const;
  void clear_msg() ;
  const ::OptionalPresence_HasPresence& msg() const;
  PROTOBUF_NODISCARD ::OptionalPresence_HasPresence* release_msg();
  ::OptionalPresence_HasPresence* mutable_msg();
  void set_allocated_msg(::OptionalPresence_HasPresence* value);
  void unsafe_arena_set_allocated_msg(::OptionalPresence_HasPresence* value);
  ::OptionalPresence_HasPresence* unsafe_arena_release_msg();

  private:
  const ::OptionalPresence_HasPresence& _internal_msg() const;
  ::OptionalPresence_HasPresence* _internal_mutable_msg();

  public:
  // optional int32 o_int32 = 1;
  bool has_o_int32() const;
  void clear_o_int32() ;
  ::int32_t o_int32() const;
  void set_o_int32(::int32_t value);

  private:
  ::int32_t _internal_o_int32() const;
  void _internal_set_o_int32(::int32_t value);

  public:
  // optional .OptEnum o_enum = 3;
  bool has_o_enum() const;
  void clear_o_enum() ;
  ::OptEnum o_enum() const;
  void set_o_enum(::OptEnum value);

  private:
  ::OptEnum _internal_o_enum() const;
  void _internal_set_o_enum(::OptEnum value);

  public:
  // @@protoc_insertion_point(class_scope:OptionalPresence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      33, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OptionalPresence& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr o_string_;
    ::OptionalPresence_HasPresence* msg_;
    ::int32_t o_int32_;
    int o_enum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_optional_5fpresence_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OptionalPresence_HasPresence

// int32 x = 1;
inline void OptionalPresence_HasPresence::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t OptionalPresence_HasPresence::x() const {
  // @@protoc_insertion_point(field_get:OptionalPresence.HasPresence.x)
  return _internal_x();
}
inline void OptionalPresence_HasPresence::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:OptionalPresence.HasPresence.x)
}
inline ::int32_t OptionalPresence_HasPresence::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void OptionalPresence_HasPresence::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// -------------------------------------------------------------------

// OptionalPresence

// optional int32 o_int32 = 1;
inline bool OptionalPresence::has_o_int32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OptionalPresence::clear_o_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.o_int32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t OptionalPresence::o_int32() const {
  // @@protoc_insertion_point(field_get:OptionalPresence.o_int32)
  return _internal_o_int32();
}
inline void OptionalPresence::set_o_int32(::int32_t value) {
  _internal_set_o_int32(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:OptionalPresence.o_int32)
}
inline ::int32_t OptionalPresence::_internal_o_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.o_int32_;
}
inline void OptionalPresence::_internal_set_o_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.o_int32_ = value;
}

// optional string o_string = 2;
inline bool OptionalPresence::has_o_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OptionalPresence::clear_o_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.o_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OptionalPresence::o_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OptionalPresence.o_string)
  return _internal_o_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionalPresence::set_o_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.o_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:OptionalPresence.o_string)
}
inline std::string* OptionalPresence::mutable_o_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_o_string();
  // @@protoc_insertion_point(field_mutable:OptionalPresence.o_string)
  return _s;
}
inline const std::string& OptionalPresence::_internal_o_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.o_string_.Get();
}
inline void OptionalPresence::_internal_set_o_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.o_string_.Set(value, GetArena());
}
inline std::string* OptionalPresence::_internal_mutable_o_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.o_string_.Mutable( GetArena());
}
inline std::string* OptionalPresence::release_o_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:OptionalPresence.o_string)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.o_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.o_string_.Set("", GetArena());
  }
  return released;
}
inline void OptionalPresence::set_allocated_o_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.o_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.o_string_.IsDefault()) {
    _impl_.o_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:OptionalPresence.o_string)
}

// optional .OptEnum o_enum = 3;
inline bool OptionalPresence::has_o_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OptionalPresence::clear_o_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.o_enum_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::OptEnum OptionalPresence::o_enum() const {
  // @@protoc_insertion_point(field_get:OptionalPresence.o_enum)
  return _internal_o_enum();
}
inline void OptionalPresence::set_o_enum(::OptEnum value) {
  _internal_set_o_enum(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:OptionalPresence.o_enum)
}
inline ::OptEnum OptionalPresence::_internal_o_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::OptEnum>(_impl_.o_enum_);
}
inline void OptionalPresence::_internal_set_o_enum(::OptEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.o_enum_ = value;
}

// .OptionalPresence.HasPresence msg = 10;
inline bool OptionalPresence::has_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.msg_ != nullptr);
  return value;
}
inline void OptionalPresence::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.msg_ != nullptr) _impl_.msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::OptionalPresence_HasPresence& OptionalPresence::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::OptionalPresence_HasPresence* p = _impl_.msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::OptionalPresence_HasPresence&>(::_OptionalPresence_HasPresence_default_instance_);
}
inline const ::OptionalPresence_HasPresence& OptionalPresence::msg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OptionalPresence.msg)
  return _internal_msg();
}
inline void OptionalPresence::unsafe_arena_set_allocated_msg(::OptionalPresence_HasPresence* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.msg_);
  }
  _impl_.msg_ = reinterpret_cast<::OptionalPresence_HasPresence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:OptionalPresence.msg)
}
inline ::OptionalPresence_HasPresence* OptionalPresence::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::OptionalPresence_HasPresence* released = _impl_.msg_;
  _impl_.msg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::OptionalPresence_HasPresence* OptionalPresence::unsafe_arena_release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:OptionalPresence.msg)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::OptionalPresence_HasPresence* temp = _impl_.msg_;
  _impl_.msg_ = nullptr;
  return temp;
}
inline ::OptionalPresence_HasPresence* OptionalPresence::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.msg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::OptionalPresence_HasPresence>(GetArena());
    _impl_.msg_ = reinterpret_cast<::OptionalPresence_HasPresence*>(p);
  }
  return _impl_.msg_;
}
inline ::OptionalPresence_HasPresence* OptionalPresence::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::OptionalPresence_HasPresence* _msg = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:OptionalPresence.msg)
  return _msg;
}
inline void OptionalPresence::set_allocated_msg(::OptionalPresence_HasPresence* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.msg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.msg_ = reinterpret_cast<::OptionalPresence_HasPresence*>(value);
  // @@protoc_insertion_point(field_set_allocated:OptionalPresence.msg)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::OptEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::OptEnum>() {
  return ::OptEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // optional_5fpresence_2eproto_2epb_2eh
