// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: nested.proto
// Protobuf C++ Version: 5.29.3

#ifndef nested_2eproto_2epb_2eh
#define nested_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_nested_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_nested_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_nested_2eproto;
class Leaf;
struct LeafDefaultTypeInternal;
extern LeafDefaultTypeInternal _Leaf_default_instance_;
class Mid;
struct MidDefaultTypeInternal;
extern MidDefaultTypeInternal _Mid_default_instance_;
class NestedAll;
struct NestedAllDefaultTypeInternal;
extern NestedAllDefaultTypeInternal _NestedAll_default_instance_;
class Outer;
struct OuterDefaultTypeInternal;
extern OuterDefaultTypeInternal _Outer_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Leaf final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Leaf) */ {
 public:
  inline Leaf() : Leaf(nullptr) {}
  ~Leaf() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Leaf* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Leaf));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Leaf(
      ::google::protobuf::internal::ConstantInitialized);

  inline Leaf(const Leaf& from) : Leaf(nullptr, from) {}
  inline Leaf(Leaf&& from) noexcept
      : Leaf(nullptr, std::move(from)) {}
  inline Leaf& operator=(const Leaf& from) {
    CopyFrom(from);
    return *this;
  }
  inline Leaf& operator=(Leaf&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Leaf& default_instance() {
    return *internal_default_instance();
  }
  static inline const Leaf* internal_default_instance() {
    return reinterpret_cast<const Leaf*>(
        &_Leaf_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Leaf& a, Leaf& b) { a.Swap(&b); }
  inline void Swap(Leaf* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Leaf* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Leaf* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Leaf>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Leaf& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Leaf& from) { Leaf::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Leaf* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Leaf"; }

 protected:
  explicit Leaf(::google::protobuf::Arena* arena);
  Leaf(::google::protobuf::Arena* arena, const Leaf& from);
  Leaf(::google::protobuf::Arena* arena, Leaf&& from) noexcept
      : Leaf(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Leaf)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Leaf& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nested_2eproto;
};
// -------------------------------------------------------------------

class Mid final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Mid) */ {
 public:
  inline Mid() : Mid(nullptr) {}
  ~Mid() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Mid* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Mid));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Mid(
      ::google::protobuf::internal::ConstantInitialized);

  inline Mid(const Mid& from) : Mid(nullptr, from) {}
  inline Mid(Mid&& from) noexcept
      : Mid(nullptr, std::move(from)) {}
  inline Mid& operator=(const Mid& from) {
    CopyFrom(from);
    return *this;
  }
  inline Mid& operator=(Mid&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Mid& default_instance() {
    return *internal_default_instance();
  }
  static inline const Mid* internal_default_instance() {
    return reinterpret_cast<const Mid*>(
        &_Mid_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Mid& a, Mid& b) { a.Swap(&b); }
  inline void Swap(Mid* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Mid* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Mid* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Mid>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Mid& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Mid& from) { Mid::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Mid* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Mid"; }

 protected:
  explicit Mid(::google::protobuf::Arena* arena);
  Mid(::google::protobuf::Arena* arena, const Mid& from);
  Mid(::google::protobuf::Arena* arena, Mid&& from) noexcept
      : Mid(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeavesFieldNumber = 2,
    kLeafFieldNumber = 1,
  };
  // repeated .Leaf leaves = 2;
  int leaves_size() const;
  private:
  int _internal_leaves_size() const;

  public:
  void clear_leaves() ;
  ::Leaf* mutable_leaves(int index);
  ::google::protobuf::RepeatedPtrField<::Leaf>* mutable_leaves();

  private:
  const ::google::protobuf::RepeatedPtrField<::Leaf>& _internal_leaves() const;
  ::google::protobuf::RepeatedPtrField<::Leaf>* _internal_mutable_leaves();
  public:
  const ::Leaf& leaves(int index) const;
  ::Leaf* add_leaves();
  const ::google::protobuf::RepeatedPtrField<::Leaf>& leaves() const;
  // .Leaf leaf = 1;
  bool has_leaf() const;
  void clear_leaf() ;
  const ::Leaf& leaf() const;
  PROTOBUF_NODISCARD ::Leaf* release_leaf();
  ::Leaf* mutable_leaf();
  void set_allocated_leaf(::Leaf* value);
  void unsafe_arena_set_allocated_leaf(::Leaf* value);
  ::Leaf* unsafe_arena_release_leaf();

  private:
  const ::Leaf& _internal_leaf() const;
  ::Leaf* _internal_mutable_leaf();

  public:
  // @@protoc_insertion_point(class_scope:Mid)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Mid& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Leaf > leaves_;
    ::Leaf* leaf_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nested_2eproto;
};
// -------------------------------------------------------------------

class Outer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Outer) */ {
 public:
  inline Outer() : Outer(nullptr) {}
  ~Outer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Outer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Outer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Outer(
      ::google::protobuf::internal::ConstantInitialized);

  inline Outer(const Outer& from) : Outer(nullptr, from) {}
  inline Outer(Outer&& from) noexcept
      : Outer(nullptr, std::move(from)) {}
  inline Outer& operator=(const Outer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Outer& operator=(Outer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Outer& default_instance() {
    return *internal_default_instance();
  }
  static inline const Outer* internal_default_instance() {
    return reinterpret_cast<const Outer*>(
        &_Outer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Outer& a, Outer& b) { a.Swap(&b); }
  inline void Swap(Outer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Outer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Outer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Outer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Outer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Outer& from) { Outer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Outer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Outer"; }

 protected:
  explicit Outer(::google::protobuf::Arena* arena);
  Outer(::google::protobuf::Arena* arena, const Outer& from);
  Outer(::google::protobuf::Arena* arena, Outer&& from) noexcept
      : Outer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMidsFieldNumber = 2,
    kMidFieldNumber = 1,
  };
  // repeated .Mid mids = 2;
  int mids_size() const;
  private:
  int _internal_mids_size() const;

  public:
  void clear_mids() ;
  ::Mid* mutable_mids(int index);
  ::google::protobuf::RepeatedPtrField<::Mid>* mutable_mids();

  private:
  const ::google::protobuf::RepeatedPtrField<::Mid>& _internal_mids() const;
  ::google::protobuf::RepeatedPtrField<::Mid>* _internal_mutable_mids();
  public:
  const ::Mid& mids(int index) const;
  ::Mid* add_mids();
  const ::google::protobuf::RepeatedPtrField<::Mid>& mids() const;
  // .Mid mid = 1;
  bool has_mid() const;
  void clear_mid() ;
  const ::Mid& mid() const;
  PROTOBUF_NODISCARD ::Mid* release_mid();
  ::Mid* mutable_mid();
  void set_allocated_mid(::Mid* value);
  void unsafe_arena_set_allocated_mid(::Mid* value);
  ::Mid* unsafe_arena_release_mid();

  private:
  const ::Mid& _internal_mid() const;
  ::Mid* _internal_mutable_mid();

  public:
  // @@protoc_insertion_point(class_scope:Outer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Outer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Mid > mids_;
    ::Mid* mid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nested_2eproto;
};
// -------------------------------------------------------------------

class NestedAll final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:NestedAll) */ {
 public:
  inline NestedAll() : NestedAll(nullptr) {}
  ~NestedAll() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NestedAll* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NestedAll));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NestedAll(
      ::google::protobuf::internal::ConstantInitialized);

  inline NestedAll(const NestedAll& from) : NestedAll(nullptr, from) {}
  inline NestedAll(NestedAll&& from) noexcept
      : NestedAll(nullptr, std::move(from)) {}
  inline NestedAll& operator=(const NestedAll& from) {
    CopyFrom(from);
    return *this;
  }
  inline NestedAll& operator=(NestedAll&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NestedAll& default_instance() {
    return *internal_default_instance();
  }
  static inline const NestedAll* internal_default_instance() {
    return reinterpret_cast<const NestedAll*>(
        &_NestedAll_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NestedAll& a, NestedAll& b) { a.Swap(&b); }
  inline void Swap(NestedAll* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NestedAll* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NestedAll* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NestedAll>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NestedAll& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NestedAll& from) { NestedAll::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NestedAll* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "NestedAll"; }

 protected:
  explicit NestedAll(::google::protobuf::Arena* arena);
  NestedAll(::google::protobuf::Arena* arena, const NestedAll& from);
  NestedAll(::google::protobuf::Arena* arena, NestedAll&& from) noexcept
      : NestedAll(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kForestFieldNumber = 2,
    kRootFieldNumber = 1,
  };
  // repeated .Outer forest = 2;
  int forest_size() const;
  private:
  int _internal_forest_size() const;

  public:
  void clear_forest() ;
  ::Outer* mutable_forest(int index);
  ::google::protobuf::RepeatedPtrField<::Outer>* mutable_forest();

  private:
  const ::google::protobuf::RepeatedPtrField<::Outer>& _internal_forest() const;
  ::google::protobuf::RepeatedPtrField<::Outer>* _internal_mutable_forest();
  public:
  const ::Outer& forest(int index) const;
  ::Outer* add_forest();
  const ::google::protobuf::RepeatedPtrField<::Outer>& forest() const;
  // .Outer root = 1;
  bool has_root() const;
  void clear_root() ;
  const ::Outer& root() const;
  PROTOBUF_NODISCARD ::Outer* release_root();
  ::Outer* mutable_root();
  void set_allocated_root(::Outer* value);
  void unsafe_arena_set_allocated_root(::Outer* value);
  ::Outer* unsafe_arena_release_root();

  private:
  const ::Outer& _internal_root() const;
  ::Outer* _internal_mutable_root();

  public:
  // @@protoc_insertion_point(class_scope:NestedAll)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NestedAll& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Outer > forest_;
    ::Outer* root_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nested_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Leaf

// int64 id = 1;
inline void Leaf::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Leaf::id() const {
  // @@protoc_insertion_point(field_get:Leaf.id)
  return _internal_id();
}
inline void Leaf::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Leaf.id)
}
inline ::int64_t Leaf::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Leaf::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// Mid

// .Leaf leaf = 1;
inline bool Mid::has_leaf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.leaf_ != nullptr);
  return value;
}
inline void Mid::clear_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.leaf_ != nullptr) _impl_.leaf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Leaf& Mid::_internal_leaf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Leaf* p = _impl_.leaf_;
  return p != nullptr ? *p : reinterpret_cast<const ::Leaf&>(::_Leaf_default_instance_);
}
inline const ::Leaf& Mid::leaf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Mid.leaf)
  return _internal_leaf();
}
inline void Mid::unsafe_arena_set_allocated_leaf(::Leaf* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.leaf_);
  }
  _impl_.leaf_ = reinterpret_cast<::Leaf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Mid.leaf)
}
inline ::Leaf* Mid::release_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Leaf* released = _impl_.leaf_;
  _impl_.leaf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Leaf* Mid::unsafe_arena_release_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Mid.leaf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Leaf* temp = _impl_.leaf_;
  _impl_.leaf_ = nullptr;
  return temp;
}
inline ::Leaf* Mid::_internal_mutable_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.leaf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Leaf>(GetArena());
    _impl_.leaf_ = reinterpret_cast<::Leaf*>(p);
  }
  return _impl_.leaf_;
}
inline ::Leaf* Mid::mutable_leaf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Leaf* _msg = _internal_mutable_leaf();
  // @@protoc_insertion_point(field_mutable:Mid.leaf)
  return _msg;
}
inline void Mid::set_allocated_leaf(::Leaf* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.leaf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.leaf_ = reinterpret_cast<::Leaf*>(value);
  // @@protoc_insertion_point(field_set_allocated:Mid.leaf)
}

// repeated .Leaf leaves = 2;
inline int Mid::_internal_leaves_size() const {
  return _internal_leaves().size();
}
inline int Mid::leaves_size() const {
  return _internal_leaves_size();
}
inline void Mid::clear_leaves() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leaves_.Clear();
}
inline ::Leaf* Mid::mutable_leaves(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Mid.leaves)
  return _internal_mutable_leaves()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Leaf>* Mid::mutable_leaves()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Mid.leaves)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_leaves();
}
inline const ::Leaf& Mid::leaves(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Mid.leaves)
  return _internal_leaves().Get(index);
}
inline ::Leaf* Mid::add_leaves() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Leaf* _add = _internal_mutable_leaves()->Add();
  // @@protoc_insertion_point(field_add:Mid.leaves)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Leaf>& Mid::leaves() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Mid.leaves)
  return _internal_leaves();
}
inline const ::google::protobuf::RepeatedPtrField<::Leaf>&
Mid::_internal_leaves() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leaves_;
}
inline ::google::protobuf::RepeatedPtrField<::Leaf>*
Mid::_internal_mutable_leaves() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.leaves_;
}

// -------------------------------------------------------------------

// Outer

// .Mid mid = 1;
inline bool Outer::has_mid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mid_ != nullptr);
  return value;
}
inline void Outer::clear_mid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mid_ != nullptr) _impl_.mid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Mid& Outer::_internal_mid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Mid* p = _impl_.mid_;
  return p != nullptr ? *p : reinterpret_cast<const ::Mid&>(::_Mid_default_instance_);
}
inline const ::Mid& Outer::mid() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Outer.mid)
  return _internal_mid();
}
inline void Outer::unsafe_arena_set_allocated_mid(::Mid* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mid_);
  }
  _impl_.mid_ = reinterpret_cast<::Mid*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Outer.mid)
}
inline ::Mid* Outer::release_mid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Mid* released = _impl_.mid_;
  _impl_.mid_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Mid* Outer::unsafe_arena_release_mid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Outer.mid)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Mid* temp = _impl_.mid_;
  _impl_.mid_ = nullptr;
  return temp;
}
inline ::Mid* Outer::_internal_mutable_mid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mid_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Mid>(GetArena());
    _impl_.mid_ = reinterpret_cast<::Mid*>(p);
  }
  return _impl_.mid_;
}
inline ::Mid* Outer::mutable_mid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Mid* _msg = _internal_mutable_mid();
  // @@protoc_insertion_point(field_mutable:Outer.mid)
  return _msg;
}
inline void Outer::set_allocated_mid(::Mid* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mid_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.mid_ = reinterpret_cast<::Mid*>(value);
  // @@protoc_insertion_point(field_set_allocated:Outer.mid)
}

// repeated .Mid mids = 2;
inline int Outer::_internal_mids_size() const {
  return _internal_mids().size();
}
inline int Outer::mids_size() const {
  return _internal_mids_size();
}
inline void Outer::clear_mids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mids_.Clear();
}
inline ::Mid* Outer::mutable_mids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Outer.mids)
  return _internal_mutable_mids()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Mid>* Outer::mutable_mids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Outer.mids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_mids();
}
inline const ::Mid& Outer::mids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Outer.mids)
  return _internal_mids().Get(index);
}
inline ::Mid* Outer::add_mids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Mid* _add = _internal_mutable_mids()->Add();
  // @@protoc_insertion_point(field_add:Outer.mids)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Mid>& Outer::mids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Outer.mids)
  return _internal_mids();
}
inline const ::google::protobuf::RepeatedPtrField<::Mid>&
Outer::_internal_mids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mids_;
}
inline ::google::protobuf::RepeatedPtrField<::Mid>*
Outer::_internal_mutable_mids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.mids_;
}

// -------------------------------------------------------------------

// NestedAll

// .Outer root = 1;
inline bool NestedAll::has_root() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.root_ != nullptr);
  return value;
}
inline void NestedAll::clear_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.root_ != nullptr) _impl_.root_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Outer& NestedAll::_internal_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Outer* p = _impl_.root_;
  return p != nullptr ? *p : reinterpret_cast<const ::Outer&>(::_Outer_default_instance_);
}
inline const ::Outer& NestedAll::root() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:NestedAll.root)
  return _internal_root();
}
inline void NestedAll::unsafe_arena_set_allocated_root(::Outer* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.root_);
  }
  _impl_.root_ = reinterpret_cast<::Outer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NestedAll.root)
}
inline ::Outer* NestedAll::release_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Outer* released = _impl_.root_;
  _impl_.root_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Outer* NestedAll::unsafe_arena_release_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:NestedAll.root)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Outer* temp = _impl_.root_;
  _impl_.root_ = nullptr;
  return temp;
}
inline ::Outer* NestedAll::_internal_mutable_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.root_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Outer>(GetArena());
    _impl_.root_ = reinterpret_cast<::Outer*>(p);
  }
  return _impl_.root_;
}
inline ::Outer* NestedAll::mutable_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Outer* _msg = _internal_mutable_root();
  // @@protoc_insertion_point(field_mutable:NestedAll.root)
  return _msg;
}
inline void NestedAll::set_allocated_root(::Outer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.root_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.root_ = reinterpret_cast<::Outer*>(value);
  // @@protoc_insertion_point(field_set_allocated:NestedAll.root)
}

// repeated .Outer forest = 2;
inline int NestedAll::_internal_forest_size() const {
  return _internal_forest().size();
}
inline int NestedAll::forest_size() const {
  return _internal_forest_size();
}
inline void NestedAll::clear_forest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forest_.Clear();
}
inline ::Outer* NestedAll::mutable_forest(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:NestedAll.forest)
  return _internal_mutable_forest()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Outer>* NestedAll::mutable_forest()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:NestedAll.forest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_forest();
}
inline const ::Outer& NestedAll::forest(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:NestedAll.forest)
  return _internal_forest().Get(index);
}
inline ::Outer* NestedAll::add_forest() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Outer* _add = _internal_mutable_forest()->Add();
  // @@protoc_insertion_point(field_add:NestedAll.forest)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Outer>& NestedAll::forest() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:NestedAll.forest)
  return _internal_forest();
}
inline const ::google::protobuf::RepeatedPtrField<::Outer>&
NestedAll::_internal_forest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forest_;
}
inline ::google::protobuf::RepeatedPtrField<::Outer>*
NestedAll::_internal_mutable_forest() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.forest_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // nested_2eproto_2epb_2eh
