// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: scalars.proto
// Protobuf C++ Version: 5.29.3

#ifndef scalars_2eproto_2epb_2eh
#define scalars_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_scalars_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_scalars_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_scalars_2eproto;
class Scalars;
struct ScalarsDefaultTypeInternal;
extern ScalarsDefaultTypeInternal _Scalars_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum TestEnum : int {
  ENUM_ZERO = 0,
  ENUM_ONE = 1,
  ENUM_TWO = 2,
  TestEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TestEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TestEnum_IsValid(int value);
extern const uint32_t TestEnum_internal_data_[];
constexpr TestEnum TestEnum_MIN = static_cast<TestEnum>(0);
constexpr TestEnum TestEnum_MAX = static_cast<TestEnum>(2);
constexpr int TestEnum_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
TestEnum_descriptor();
template <typename T>
const std::string& TestEnum_Name(T value) {
  static_assert(std::is_same<T, TestEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TestEnum_Name().");
  return TestEnum_Name(static_cast<TestEnum>(value));
}
template <>
inline const std::string& TestEnum_Name(TestEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestEnum_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TestEnum_Parse(absl::string_view name, TestEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestEnum>(
      TestEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Scalars final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Scalars) */ {
 public:
  inline Scalars() : Scalars(nullptr) {}
  ~Scalars() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Scalars* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Scalars));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Scalars(
      ::google::protobuf::internal::ConstantInitialized);

  inline Scalars(const Scalars& from) : Scalars(nullptr, from) {}
  inline Scalars(Scalars&& from) noexcept
      : Scalars(nullptr, std::move(from)) {}
  inline Scalars& operator=(const Scalars& from) {
    CopyFrom(from);
    return *this;
  }
  inline Scalars& operator=(Scalars&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Scalars& default_instance() {
    return *internal_default_instance();
  }
  static inline const Scalars* internal_default_instance() {
    return reinterpret_cast<const Scalars*>(
        &_Scalars_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Scalars& a, Scalars& b) { a.Swap(&b); }
  inline void Swap(Scalars* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Scalars* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Scalars* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Scalars>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Scalars& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Scalars& from) { Scalars::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Scalars* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Scalars"; }

 protected:
  explicit Scalars(::google::protobuf::Arena* arena);
  Scalars(::google::protobuf::Arena* arena, const Scalars& from);
  Scalars(::google::protobuf::Arena* arena, Scalars&& from) noexcept
      : Scalars(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFStringFieldNumber = 14,
    kFBytesFieldNumber = 15,
    kFInt64FieldNumber = 2,
    kFInt32FieldNumber = 1,
    kFUint32FieldNumber = 3,
    kFUint64FieldNumber = 4,
    kFSint64FieldNumber = 6,
    kFSint32FieldNumber = 5,
    kFFixed32FieldNumber = 7,
    kFFixed64FieldNumber = 8,
    kFSfixed64FieldNumber = 10,
    kFSfixed32FieldNumber = 9,
    kFBoolFieldNumber = 11,
    kFDoubleFieldNumber = 13,
    kFFloatFieldNumber = 12,
    kFEnumFieldNumber = 16,
  };
  // string f_string = 14;
  void clear_f_string() ;
  const std::string& f_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_string(Arg_&& arg, Args_... args);
  std::string* mutable_f_string();
  PROTOBUF_NODISCARD std::string* release_f_string();
  void set_allocated_f_string(std::string* value);

  private:
  const std::string& _internal_f_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_string(
      const std::string& value);
  std::string* _internal_mutable_f_string();

  public:
  // bytes f_bytes = 15;
  void clear_f_bytes() ;
  const std::string& f_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_f_bytes();
  PROTOBUF_NODISCARD std::string* release_f_bytes();
  void set_allocated_f_bytes(std::string* value);

  private:
  const std::string& _internal_f_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_bytes(
      const std::string& value);
  std::string* _internal_mutable_f_bytes();

  public:
  // int64 f_int64 = 2;
  void clear_f_int64() ;
  ::int64_t f_int64() const;
  void set_f_int64(::int64_t value);

  private:
  ::int64_t _internal_f_int64() const;
  void _internal_set_f_int64(::int64_t value);

  public:
  // int32 f_int32 = 1;
  void clear_f_int32() ;
  ::int32_t f_int32() const;
  void set_f_int32(::int32_t value);

  private:
  ::int32_t _internal_f_int32() const;
  void _internal_set_f_int32(::int32_t value);

  public:
  // uint32 f_uint32 = 3;
  void clear_f_uint32() ;
  ::uint32_t f_uint32() const;
  void set_f_uint32(::uint32_t value);

  private:
  ::uint32_t _internal_f_uint32() const;
  void _internal_set_f_uint32(::uint32_t value);

  public:
  // uint64 f_uint64 = 4;
  void clear_f_uint64() ;
  ::uint64_t f_uint64() const;
  void set_f_uint64(::uint64_t value);

  private:
  ::uint64_t _internal_f_uint64() const;
  void _internal_set_f_uint64(::uint64_t value);

  public:
  // sint64 f_sint64 = 6;
  void clear_f_sint64() ;
  ::int64_t f_sint64() const;
  void set_f_sint64(::int64_t value);

  private:
  ::int64_t _internal_f_sint64() const;
  void _internal_set_f_sint64(::int64_t value);

  public:
  // sint32 f_sint32 = 5;
  void clear_f_sint32() ;
  ::int32_t f_sint32() const;
  void set_f_sint32(::int32_t value);

  private:
  ::int32_t _internal_f_sint32() const;
  void _internal_set_f_sint32(::int32_t value);

  public:
  // fixed32 f_fixed32 = 7;
  void clear_f_fixed32() ;
  ::uint32_t f_fixed32() const;
  void set_f_fixed32(::uint32_t value);

  private:
  ::uint32_t _internal_f_fixed32() const;
  void _internal_set_f_fixed32(::uint32_t value);

  public:
  // fixed64 f_fixed64 = 8;
  void clear_f_fixed64() ;
  ::uint64_t f_fixed64() const;
  void set_f_fixed64(::uint64_t value);

  private:
  ::uint64_t _internal_f_fixed64() const;
  void _internal_set_f_fixed64(::uint64_t value);

  public:
  // sfixed64 f_sfixed64 = 10;
  void clear_f_sfixed64() ;
  ::int64_t f_sfixed64() const;
  void set_f_sfixed64(::int64_t value);

  private:
  ::int64_t _internal_f_sfixed64() const;
  void _internal_set_f_sfixed64(::int64_t value);

  public:
  // sfixed32 f_sfixed32 = 9;
  void clear_f_sfixed32() ;
  ::int32_t f_sfixed32() const;
  void set_f_sfixed32(::int32_t value);

  private:
  ::int32_t _internal_f_sfixed32() const;
  void _internal_set_f_sfixed32(::int32_t value);

  public:
  // bool f_bool = 11;
  void clear_f_bool() ;
  bool f_bool() const;
  void set_f_bool(bool value);

  private:
  bool _internal_f_bool() const;
  void _internal_set_f_bool(bool value);

  public:
  // double f_double = 13;
  void clear_f_double() ;
  double f_double() const;
  void set_f_double(double value);

  private:
  double _internal_f_double() const;
  void _internal_set_f_double(double value);

  public:
  // float f_float = 12;
  void clear_f_float() ;
  float f_float() const;
  void set_f_float(float value);

  private:
  float _internal_f_float() const;
  void _internal_set_f_float(float value);

  public:
  // .TestEnum f_enum = 16;
  void clear_f_enum() ;
  ::TestEnum f_enum() const;
  void set_f_enum(::TestEnum value);

  private:
  ::TestEnum _internal_f_enum() const;
  void _internal_set_f_enum(::TestEnum value);

  public:
  // @@protoc_insertion_point(class_scope:Scalars)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Scalars& from_msg);
    ::google::protobuf::internal::ArenaStringPtr f_string_;
    ::google::protobuf::internal::ArenaStringPtr f_bytes_;
    ::int64_t f_int64_;
    ::int32_t f_int32_;
    ::uint32_t f_uint32_;
    ::uint64_t f_uint64_;
    ::int64_t f_sint64_;
    ::int32_t f_sint32_;
    ::uint32_t f_fixed32_;
    ::uint64_t f_fixed64_;
    ::int64_t f_sfixed64_;
    ::int32_t f_sfixed32_;
    bool f_bool_;
    double f_double_;
    float f_float_;
    int f_enum_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scalars_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Scalars

// int32 f_int32 = 1;
inline void Scalars::clear_f_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_int32_ = 0;
}
inline ::int32_t Scalars::f_int32() const {
  // @@protoc_insertion_point(field_get:Scalars.f_int32)
  return _internal_f_int32();
}
inline void Scalars::set_f_int32(::int32_t value) {
  _internal_set_f_int32(value);
  // @@protoc_insertion_point(field_set:Scalars.f_int32)
}
inline ::int32_t Scalars::_internal_f_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_int32_;
}
inline void Scalars::_internal_set_f_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_int32_ = value;
}

// int64 f_int64 = 2;
inline void Scalars::clear_f_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_int64_ = ::int64_t{0};
}
inline ::int64_t Scalars::f_int64() const {
  // @@protoc_insertion_point(field_get:Scalars.f_int64)
  return _internal_f_int64();
}
inline void Scalars::set_f_int64(::int64_t value) {
  _internal_set_f_int64(value);
  // @@protoc_insertion_point(field_set:Scalars.f_int64)
}
inline ::int64_t Scalars::_internal_f_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_int64_;
}
inline void Scalars::_internal_set_f_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_int64_ = value;
}

// uint32 f_uint32 = 3;
inline void Scalars::clear_f_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_uint32_ = 0u;
}
inline ::uint32_t Scalars::f_uint32() const {
  // @@protoc_insertion_point(field_get:Scalars.f_uint32)
  return _internal_f_uint32();
}
inline void Scalars::set_f_uint32(::uint32_t value) {
  _internal_set_f_uint32(value);
  // @@protoc_insertion_point(field_set:Scalars.f_uint32)
}
inline ::uint32_t Scalars::_internal_f_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_uint32_;
}
inline void Scalars::_internal_set_f_uint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_uint32_ = value;
}

// uint64 f_uint64 = 4;
inline void Scalars::clear_f_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_uint64_ = ::uint64_t{0u};
}
inline ::uint64_t Scalars::f_uint64() const {
  // @@protoc_insertion_point(field_get:Scalars.f_uint64)
  return _internal_f_uint64();
}
inline void Scalars::set_f_uint64(::uint64_t value) {
  _internal_set_f_uint64(value);
  // @@protoc_insertion_point(field_set:Scalars.f_uint64)
}
inline ::uint64_t Scalars::_internal_f_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_uint64_;
}
inline void Scalars::_internal_set_f_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_uint64_ = value;
}

// sint32 f_sint32 = 5;
inline void Scalars::clear_f_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sint32_ = 0;
}
inline ::int32_t Scalars::f_sint32() const {
  // @@protoc_insertion_point(field_get:Scalars.f_sint32)
  return _internal_f_sint32();
}
inline void Scalars::set_f_sint32(::int32_t value) {
  _internal_set_f_sint32(value);
  // @@protoc_insertion_point(field_set:Scalars.f_sint32)
}
inline ::int32_t Scalars::_internal_f_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_sint32_;
}
inline void Scalars::_internal_set_f_sint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sint32_ = value;
}

// sint64 f_sint64 = 6;
inline void Scalars::clear_f_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sint64_ = ::int64_t{0};
}
inline ::int64_t Scalars::f_sint64() const {
  // @@protoc_insertion_point(field_get:Scalars.f_sint64)
  return _internal_f_sint64();
}
inline void Scalars::set_f_sint64(::int64_t value) {
  _internal_set_f_sint64(value);
  // @@protoc_insertion_point(field_set:Scalars.f_sint64)
}
inline ::int64_t Scalars::_internal_f_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_sint64_;
}
inline void Scalars::_internal_set_f_sint64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sint64_ = value;
}

// fixed32 f_fixed32 = 7;
inline void Scalars::clear_f_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_fixed32_ = 0u;
}
inline ::uint32_t Scalars::f_fixed32() const {
  // @@protoc_insertion_point(field_get:Scalars.f_fixed32)
  return _internal_f_fixed32();
}
inline void Scalars::set_f_fixed32(::uint32_t value) {
  _internal_set_f_fixed32(value);
  // @@protoc_insertion_point(field_set:Scalars.f_fixed32)
}
inline ::uint32_t Scalars::_internal_f_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_fixed32_;
}
inline void Scalars::_internal_set_f_fixed32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_fixed32_ = value;
}

// fixed64 f_fixed64 = 8;
inline void Scalars::clear_f_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_fixed64_ = ::uint64_t{0u};
}
inline ::uint64_t Scalars::f_fixed64() const {
  // @@protoc_insertion_point(field_get:Scalars.f_fixed64)
  return _internal_f_fixed64();
}
inline void Scalars::set_f_fixed64(::uint64_t value) {
  _internal_set_f_fixed64(value);
  // @@protoc_insertion_point(field_set:Scalars.f_fixed64)
}
inline ::uint64_t Scalars::_internal_f_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_fixed64_;
}
inline void Scalars::_internal_set_f_fixed64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_fixed64_ = value;
}

// sfixed32 f_sfixed32 = 9;
inline void Scalars::clear_f_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sfixed32_ = 0;
}
inline ::int32_t Scalars::f_sfixed32() const {
  // @@protoc_insertion_point(field_get:Scalars.f_sfixed32)
  return _internal_f_sfixed32();
}
inline void Scalars::set_f_sfixed32(::int32_t value) {
  _internal_set_f_sfixed32(value);
  // @@protoc_insertion_point(field_set:Scalars.f_sfixed32)
}
inline ::int32_t Scalars::_internal_f_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_sfixed32_;
}
inline void Scalars::_internal_set_f_sfixed32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sfixed32_ = value;
}

// sfixed64 f_sfixed64 = 10;
inline void Scalars::clear_f_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sfixed64_ = ::int64_t{0};
}
inline ::int64_t Scalars::f_sfixed64() const {
  // @@protoc_insertion_point(field_get:Scalars.f_sfixed64)
  return _internal_f_sfixed64();
}
inline void Scalars::set_f_sfixed64(::int64_t value) {
  _internal_set_f_sfixed64(value);
  // @@protoc_insertion_point(field_set:Scalars.f_sfixed64)
}
inline ::int64_t Scalars::_internal_f_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_sfixed64_;
}
inline void Scalars::_internal_set_f_sfixed64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_sfixed64_ = value;
}

// bool f_bool = 11;
inline void Scalars::clear_f_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_bool_ = false;
}
inline bool Scalars::f_bool() const {
  // @@protoc_insertion_point(field_get:Scalars.f_bool)
  return _internal_f_bool();
}
inline void Scalars::set_f_bool(bool value) {
  _internal_set_f_bool(value);
  // @@protoc_insertion_point(field_set:Scalars.f_bool)
}
inline bool Scalars::_internal_f_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_bool_;
}
inline void Scalars::_internal_set_f_bool(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_bool_ = value;
}

// float f_float = 12;
inline void Scalars::clear_f_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_float_ = 0;
}
inline float Scalars::f_float() const {
  // @@protoc_insertion_point(field_get:Scalars.f_float)
  return _internal_f_float();
}
inline void Scalars::set_f_float(float value) {
  _internal_set_f_float(value);
  // @@protoc_insertion_point(field_set:Scalars.f_float)
}
inline float Scalars::_internal_f_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_float_;
}
inline void Scalars::_internal_set_f_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_float_ = value;
}

// double f_double = 13;
inline void Scalars::clear_f_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_double_ = 0;
}
inline double Scalars::f_double() const {
  // @@protoc_insertion_point(field_get:Scalars.f_double)
  return _internal_f_double();
}
inline void Scalars::set_f_double(double value) {
  _internal_set_f_double(value);
  // @@protoc_insertion_point(field_set:Scalars.f_double)
}
inline double Scalars::_internal_f_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_double_;
}
inline void Scalars::_internal_set_f_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_double_ = value;
}

// string f_string = 14;
inline void Scalars::clear_f_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_string_.ClearToEmpty();
}
inline const std::string& Scalars::f_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Scalars.f_string)
  return _internal_f_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Scalars::set_f_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Scalars.f_string)
}
inline std::string* Scalars::mutable_f_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_string();
  // @@protoc_insertion_point(field_mutable:Scalars.f_string)
  return _s;
}
inline const std::string& Scalars::_internal_f_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_string_.Get();
}
inline void Scalars::_internal_set_f_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_string_.Set(value, GetArena());
}
inline std::string* Scalars::_internal_mutable_f_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.f_string_.Mutable( GetArena());
}
inline std::string* Scalars::release_f_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Scalars.f_string)
  return _impl_.f_string_.Release();
}
inline void Scalars::set_allocated_f_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.f_string_.IsDefault()) {
    _impl_.f_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Scalars.f_string)
}

// bytes f_bytes = 15;
inline void Scalars::clear_f_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_bytes_.ClearToEmpty();
}
inline const std::string& Scalars::f_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Scalars.f_bytes)
  return _internal_f_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Scalars::set_f_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Scalars.f_bytes)
}
inline std::string* Scalars::mutable_f_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_bytes();
  // @@protoc_insertion_point(field_mutable:Scalars.f_bytes)
  return _s;
}
inline const std::string& Scalars::_internal_f_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_bytes_.Get();
}
inline void Scalars::_internal_set_f_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_bytes_.Set(value, GetArena());
}
inline std::string* Scalars::_internal_mutable_f_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.f_bytes_.Mutable( GetArena());
}
inline std::string* Scalars::release_f_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Scalars.f_bytes)
  return _impl_.f_bytes_.Release();
}
inline void Scalars::set_allocated_f_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.f_bytes_.IsDefault()) {
    _impl_.f_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Scalars.f_bytes)
}

// .TestEnum f_enum = 16;
inline void Scalars::clear_f_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_enum_ = 0;
}
inline ::TestEnum Scalars::f_enum() const {
  // @@protoc_insertion_point(field_get:Scalars.f_enum)
  return _internal_f_enum();
}
inline void Scalars::set_f_enum(::TestEnum value) {
  _internal_set_f_enum(value);
  // @@protoc_insertion_point(field_set:Scalars.f_enum)
}
inline ::TestEnum Scalars::_internal_f_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::TestEnum>(_impl_.f_enum_);
}
inline void Scalars::_internal_set_f_enum(::TestEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_enum_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::TestEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::TestEnum>() {
  return ::TestEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // scalars_2eproto_2epb_2eh
