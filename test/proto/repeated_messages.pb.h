// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: repeated_messages.proto
// Protobuf C++ Version: 5.29.3

#ifndef repeated_5fmessages_2eproto_2epb_2eh
#define repeated_5fmessages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_repeated_5fmessages_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_repeated_5fmessages_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_repeated_5fmessages_2eproto;
class Item;
struct ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class RepeatedMessages;
struct RepeatedMessagesDefaultTypeInternal;
extern RepeatedMessagesDefaultTypeInternal _RepeatedMessages_default_instance_;
class Wrapper;
struct WrapperDefaultTypeInternal;
extern WrapperDefaultTypeInternal _Wrapper_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Item final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Item) */ {
 public:
  inline Item() : Item(nullptr) {}
  ~Item() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Item* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Item));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Item(
      ::google::protobuf::internal::ConstantInitialized);

  inline Item(const Item& from) : Item(nullptr, from) {}
  inline Item(Item&& from) noexcept
      : Item(nullptr, std::move(from)) {}
  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline Item& operator=(Item&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
        &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Item& a, Item& b) { a.Swap(&b); }
  inline void Swap(Item* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Item* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Item& from) { Item::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Item* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Item"; }

 protected:
  explicit Item(::google::protobuf::Arena* arena);
  Item(::google::protobuf::Arena* arena, const Item& from);
  Item(::google::protobuf::Arena* arena, Item&& from) noexcept
      : Item(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Item)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      17, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Item& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_repeated_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class Wrapper final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Wrapper) */ {
 public:
  inline Wrapper() : Wrapper(nullptr) {}
  ~Wrapper() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Wrapper* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Wrapper));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Wrapper(
      ::google::protobuf::internal::ConstantInitialized);

  inline Wrapper(const Wrapper& from) : Wrapper(nullptr, from) {}
  inline Wrapper(Wrapper&& from) noexcept
      : Wrapper(nullptr, std::move(from)) {}
  inline Wrapper& operator=(const Wrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline Wrapper& operator=(Wrapper&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Wrapper& default_instance() {
    return *internal_default_instance();
  }
  static inline const Wrapper* internal_default_instance() {
    return reinterpret_cast<const Wrapper*>(
        &_Wrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Wrapper& a, Wrapper& b) { a.Swap(&b); }
  inline void Swap(Wrapper* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Wrapper* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Wrapper* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Wrapper>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Wrapper& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Wrapper& from) { Wrapper::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Wrapper* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Wrapper"; }

 protected:
  explicit Wrapper(::google::protobuf::Arena* arena);
  Wrapper(::google::protobuf::Arena* arena, const Wrapper& from);
  Wrapper(::google::protobuf::Arena* arena, Wrapper&& from) noexcept
      : Wrapper(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kManyFieldNumber = 2,
    kSingleFieldNumber = 1,
  };
  // repeated .Item many = 2;
  int many_size() const;
  private:
  int _internal_many_size() const;

  public:
  void clear_many() ;
  ::Item* mutable_many(int index);
  ::google::protobuf::RepeatedPtrField<::Item>* mutable_many();

  private:
  const ::google::protobuf::RepeatedPtrField<::Item>& _internal_many() const;
  ::google::protobuf::RepeatedPtrField<::Item>* _internal_mutable_many();
  public:
  const ::Item& many(int index) const;
  ::Item* add_many();
  const ::google::protobuf::RepeatedPtrField<::Item>& many() const;
  // .Item single = 1;
  bool has_single() const;
  void clear_single() ;
  const ::Item& single() const;
  PROTOBUF_NODISCARD ::Item* release_single();
  ::Item* mutable_single();
  void set_allocated_single(::Item* value);
  void unsafe_arena_set_allocated_single(::Item* value);
  ::Item* unsafe_arena_release_single();

  private:
  const ::Item& _internal_single() const;
  ::Item* _internal_mutable_single();

  public:
  // @@protoc_insertion_point(class_scope:Wrapper)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Wrapper& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Item > many_;
    ::Item* single_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_repeated_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class RepeatedMessages final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RepeatedMessages) */ {
 public:
  inline RepeatedMessages() : RepeatedMessages(nullptr) {}
  ~RepeatedMessages() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RepeatedMessages* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RepeatedMessages));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RepeatedMessages(
      ::google::protobuf::internal::ConstantInitialized);

  inline RepeatedMessages(const RepeatedMessages& from) : RepeatedMessages(nullptr, from) {}
  inline RepeatedMessages(RepeatedMessages&& from) noexcept
      : RepeatedMessages(nullptr, std::move(from)) {}
  inline RepeatedMessages& operator=(const RepeatedMessages& from) {
    CopyFrom(from);
    return *this;
  }
  inline RepeatedMessages& operator=(RepeatedMessages&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RepeatedMessages& default_instance() {
    return *internal_default_instance();
  }
  static inline const RepeatedMessages* internal_default_instance() {
    return reinterpret_cast<const RepeatedMessages*>(
        &_RepeatedMessages_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RepeatedMessages& a, RepeatedMessages& b) { a.Swap(&b); }
  inline void Swap(RepeatedMessages* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RepeatedMessages* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RepeatedMessages* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RepeatedMessages>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RepeatedMessages& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RepeatedMessages& from) { RepeatedMessages::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RepeatedMessages* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "RepeatedMessages"; }

 protected:
  explicit RepeatedMessages(::google::protobuf::Arena* arena);
  RepeatedMessages(::google::protobuf::Arena* arena, const RepeatedMessages& from);
  RepeatedMessages(::google::protobuf::Arena* arena, RepeatedMessages&& from) noexcept
      : RepeatedMessages(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kWrappersFieldNumber = 2,
  };
  // repeated .Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::Item>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::Item>* _internal_mutable_items();
  public:
  const ::Item& items(int index) const;
  ::Item* add_items();
  const ::google::protobuf::RepeatedPtrField<::Item>& items() const;
  // repeated .Wrapper wrappers = 2;
  int wrappers_size() const;
  private:
  int _internal_wrappers_size() const;

  public:
  void clear_wrappers() ;
  ::Wrapper* mutable_wrappers(int index);
  ::google::protobuf::RepeatedPtrField<::Wrapper>* mutable_wrappers();

  private:
  const ::google::protobuf::RepeatedPtrField<::Wrapper>& _internal_wrappers() const;
  ::google::protobuf::RepeatedPtrField<::Wrapper>* _internal_mutable_wrappers();
  public:
  const ::Wrapper& wrappers(int index) const;
  ::Wrapper* add_wrappers();
  const ::google::protobuf::RepeatedPtrField<::Wrapper>& wrappers() const;
  // @@protoc_insertion_point(class_scope:RepeatedMessages)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RepeatedMessages& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Item > items_;
    ::google::protobuf::RepeatedPtrField< ::Wrapper > wrappers_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_repeated_5fmessages_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Item

// int32 id = 1;
inline void Item::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t Item::id() const {
  // @@protoc_insertion_point(field_get:Item.id)
  return _internal_id();
}
inline void Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Item.id)
}
inline ::int32_t Item::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Item::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void Item::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Item::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Item.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Item::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Item.name)
}
inline std::string* Item::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Item.name)
  return _s;
}
inline const std::string& Item::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Item::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Item::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Item::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Item.name)
  return _impl_.name_.Release();
}
inline void Item::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Item.name)
}

// -------------------------------------------------------------------

// Wrapper

// .Item single = 1;
inline bool Wrapper::has_single() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.single_ != nullptr);
  return value;
}
inline void Wrapper::clear_single() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.single_ != nullptr) _impl_.single_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Item& Wrapper::_internal_single() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Item* p = _impl_.single_;
  return p != nullptr ? *p : reinterpret_cast<const ::Item&>(::_Item_default_instance_);
}
inline const ::Item& Wrapper::single() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Wrapper.single)
  return _internal_single();
}
inline void Wrapper::unsafe_arena_set_allocated_single(::Item* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.single_);
  }
  _impl_.single_ = reinterpret_cast<::Item*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Wrapper.single)
}
inline ::Item* Wrapper::release_single() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Item* released = _impl_.single_;
  _impl_.single_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Item* Wrapper::unsafe_arena_release_single() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Wrapper.single)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Item* temp = _impl_.single_;
  _impl_.single_ = nullptr;
  return temp;
}
inline ::Item* Wrapper::_internal_mutable_single() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.single_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Item>(GetArena());
    _impl_.single_ = reinterpret_cast<::Item*>(p);
  }
  return _impl_.single_;
}
inline ::Item* Wrapper::mutable_single() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Item* _msg = _internal_mutable_single();
  // @@protoc_insertion_point(field_mutable:Wrapper.single)
  return _msg;
}
inline void Wrapper::set_allocated_single(::Item* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.single_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.single_ = reinterpret_cast<::Item*>(value);
  // @@protoc_insertion_point(field_set_allocated:Wrapper.single)
}

// repeated .Item many = 2;
inline int Wrapper::_internal_many_size() const {
  return _internal_many().size();
}
inline int Wrapper::many_size() const {
  return _internal_many_size();
}
inline void Wrapper::clear_many() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.many_.Clear();
}
inline ::Item* Wrapper::mutable_many(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Wrapper.many)
  return _internal_mutable_many()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Item>* Wrapper::mutable_many()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Wrapper.many)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_many();
}
inline const ::Item& Wrapper::many(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Wrapper.many)
  return _internal_many().Get(index);
}
inline ::Item* Wrapper::add_many() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Item* _add = _internal_mutable_many()->Add();
  // @@protoc_insertion_point(field_add:Wrapper.many)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Item>& Wrapper::many() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Wrapper.many)
  return _internal_many();
}
inline const ::google::protobuf::RepeatedPtrField<::Item>&
Wrapper::_internal_many() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.many_;
}
inline ::google::protobuf::RepeatedPtrField<::Item>*
Wrapper::_internal_mutable_many() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.many_;
}

// -------------------------------------------------------------------

// RepeatedMessages

// repeated .Item items = 1;
inline int RepeatedMessages::_internal_items_size() const {
  return _internal_items().size();
}
inline int RepeatedMessages::items_size() const {
  return _internal_items_size();
}
inline void RepeatedMessages::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::Item* RepeatedMessages::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RepeatedMessages.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Item>* RepeatedMessages::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedMessages.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::Item& RepeatedMessages::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RepeatedMessages.items)
  return _internal_items().Get(index);
}
inline ::Item* RepeatedMessages::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:RepeatedMessages.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Item>& RepeatedMessages::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedMessages.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::Item>&
RepeatedMessages::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::Item>*
RepeatedMessages::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// repeated .Wrapper wrappers = 2;
inline int RepeatedMessages::_internal_wrappers_size() const {
  return _internal_wrappers().size();
}
inline int RepeatedMessages::wrappers_size() const {
  return _internal_wrappers_size();
}
inline void RepeatedMessages::clear_wrappers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wrappers_.Clear();
}
inline ::Wrapper* RepeatedMessages::mutable_wrappers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RepeatedMessages.wrappers)
  return _internal_mutable_wrappers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Wrapper>* RepeatedMessages::mutable_wrappers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RepeatedMessages.wrappers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_wrappers();
}
inline const ::Wrapper& RepeatedMessages::wrappers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RepeatedMessages.wrappers)
  return _internal_wrappers().Get(index);
}
inline ::Wrapper* RepeatedMessages::add_wrappers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Wrapper* _add = _internal_mutable_wrappers()->Add();
  // @@protoc_insertion_point(field_add:RepeatedMessages.wrappers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Wrapper>& RepeatedMessages::wrappers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RepeatedMessages.wrappers)
  return _internal_wrappers();
}
inline const ::google::protobuf::RepeatedPtrField<::Wrapper>&
RepeatedMessages::_internal_wrappers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wrappers_;
}
inline ::google::protobuf::RepeatedPtrField<::Wrapper>*
RepeatedMessages::_internal_mutable_wrappers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.wrappers_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // repeated_5fmessages_2eproto_2epb_2eh
