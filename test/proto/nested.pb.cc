// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: nested.proto
// Protobuf C++ Version: 5.29.3

#include "nested.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Leaf::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Leaf::Leaf(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeafDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeafDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeafDefaultTypeInternal() {}
  union {
    Leaf _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeafDefaultTypeInternal _Leaf_default_instance_;

inline constexpr Mid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        leaves_{},
        leaf_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Mid::Mid(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MidDefaultTypeInternal() {}
  union {
    Mid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MidDefaultTypeInternal _Mid_default_instance_;

inline constexpr Outer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mids_{},
        mid_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Outer::Outer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OuterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OuterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OuterDefaultTypeInternal() {}
  union {
    Outer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OuterDefaultTypeInternal _Outer_default_instance_;

inline constexpr NestedAll::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        forest_{},
        root_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NestedAll::NestedAll(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NestedAllDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NestedAllDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NestedAllDefaultTypeInternal() {}
  union {
    NestedAll _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NestedAllDefaultTypeInternal _NestedAll_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_nested_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_nested_2eproto = nullptr;
const ::uint32_t
    TableStruct_nested_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Leaf, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Leaf, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Mid, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Mid, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Mid, _impl_.leaf_),
        PROTOBUF_FIELD_OFFSET(::Mid, _impl_.leaves_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Outer, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Outer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Outer, _impl_.mid_),
        PROTOBUF_FIELD_OFFSET(::Outer, _impl_.mids_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::NestedAll, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NestedAll, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NestedAll, _impl_.root_),
        PROTOBUF_FIELD_OFFSET(::NestedAll, _impl_.forest_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Leaf)},
        {9, 19, -1, sizeof(::Mid)},
        {21, 31, -1, sizeof(::Outer)},
        {33, 43, -1, sizeof(::NestedAll)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Leaf_default_instance_._instance,
    &::_Mid_default_instance_._instance,
    &::_Outer_default_instance_._instance,
    &::_NestedAll_default_instance_._instance,
};
const char descriptor_table_protodef_nested_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014nested.proto\"\022\n\004Leaf\022\n\n\002id\030\001 \001(\003\"1\n\003Mi"
    "d\022\023\n\004leaf\030\001 \001(\0132\005.Leaf\022\025\n\006leaves\030\002 \003(\0132\005"
    ".Leaf\".\n\005Outer\022\021\n\003mid\030\001 \001(\0132\004.Mid\022\022\n\004mid"
    "s\030\002 \003(\0132\004.Mid\"9\n\tNestedAll\022\024\n\004root\030\001 \001(\013"
    "2\006.Outer\022\026\n\006forest\030\002 \003(\0132\006.Outerb\006proto3"
};
static ::absl::once_flag descriptor_table_nested_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_nested_2eproto = {
    false,
    false,
    200,
    descriptor_table_protodef_nested_2eproto,
    "nested.proto",
    &descriptor_table_nested_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_nested_2eproto::offsets,
    file_level_enum_descriptors_nested_2eproto,
    file_level_service_descriptors_nested_2eproto,
};
// ===================================================================

class Leaf::_Internal {
 public:
};

Leaf::Leaf(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Leaf)
}
Leaf::Leaf(
    ::google::protobuf::Arena* arena, const Leaf& from)
    : Leaf(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Leaf::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Leaf::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Leaf::~Leaf() {
  // @@protoc_insertion_point(destructor:Leaf)
  SharedDtor(*this);
}
inline void Leaf::SharedDtor(MessageLite& self) {
  Leaf& this_ = static_cast<Leaf&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Leaf::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Leaf(arena);
}
constexpr auto Leaf::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Leaf),
                                            alignof(Leaf));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Leaf::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Leaf_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Leaf::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Leaf>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Leaf::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Leaf>(), &Leaf::ByteSizeLong,
            &Leaf::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Leaf, _impl_._cached_size_),
        false,
    },
    &Leaf::kDescriptorMethods,
    &descriptor_table_nested_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Leaf::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Leaf::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Leaf>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Leaf, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Leaf, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 id = 1;
    {PROTOBUF_FIELD_OFFSET(Leaf, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Leaf::Clear() {
// @@protoc_insertion_point(message_clear_start:Leaf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Leaf::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Leaf& this_ = static_cast<const Leaf&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Leaf::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Leaf& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Leaf)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Leaf)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Leaf::ByteSizeLong(const MessageLite& base) {
          const Leaf& this_ = static_cast<const Leaf&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Leaf::ByteSizeLong() const {
          const Leaf& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Leaf)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Leaf::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Leaf*>(&to_msg);
  auto& from = static_cast<const Leaf&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Leaf)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Leaf::CopyFrom(const Leaf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Leaf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Leaf::InternalSwap(Leaf* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata Leaf::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Mid::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Mid>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Mid, _impl_._has_bits_);
};

Mid::Mid(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Mid)
}
inline PROTOBUF_NDEBUG_INLINE Mid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Mid& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        leaves_{visibility, arena, from.leaves_} {}

Mid::Mid(
    ::google::protobuf::Arena* arena,
    const Mid& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Mid* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.leaf_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Leaf>(
                              arena, *from._impl_.leaf_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:Mid)
}
inline PROTOBUF_NDEBUG_INLINE Mid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        leaves_{visibility, arena} {}

inline void Mid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.leaf_ = {};
}
Mid::~Mid() {
  // @@protoc_insertion_point(destructor:Mid)
  SharedDtor(*this);
}
inline void Mid::SharedDtor(MessageLite& self) {
  Mid& this_ = static_cast<Mid&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.leaf_;
  this_._impl_.~Impl_();
}

inline void* Mid::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Mid(arena);
}
constexpr auto Mid::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Mid, _impl_.leaves_) +
          decltype(Mid::_impl_.leaves_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Mid), alignof(Mid), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Mid::PlacementNew_,
                                 sizeof(Mid),
                                 alignof(Mid));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Mid::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Mid_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Mid::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Mid>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Mid::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Mid>(), &Mid::ByteSizeLong,
            &Mid::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Mid, _impl_._cached_size_),
        false,
    },
    &Mid::kDescriptorMethods,
    &descriptor_table_nested_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Mid::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Mid::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Mid, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Mid>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Leaf leaves = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Mid, _impl_.leaves_)}},
    // .Leaf leaf = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Mid, _impl_.leaf_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Leaf leaf = 1;
    {PROTOBUF_FIELD_OFFSET(Mid, _impl_.leaf_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Leaf leaves = 2;
    {PROTOBUF_FIELD_OFFSET(Mid, _impl_.leaves_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Leaf>()},
    {::_pbi::TcParser::GetTable<::Leaf>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Mid::Clear() {
// @@protoc_insertion_point(message_clear_start:Mid)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.leaves_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.leaf_ != nullptr);
    _impl_.leaf_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Mid::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Mid& this_ = static_cast<const Mid&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Mid::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Mid& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Mid)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Leaf leaf = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.leaf_, this_._impl_.leaf_->GetCachedSize(), target,
                stream);
          }

          // repeated .Leaf leaves = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_leaves_size());
               i < n; i++) {
            const auto& repfield = this_._internal_leaves().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Mid)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Mid::ByteSizeLong(const MessageLite& base) {
          const Mid& this_ = static_cast<const Mid&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Mid::ByteSizeLong() const {
          const Mid& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Mid)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Leaf leaves = 2;
            {
              total_size += 1UL * this_._internal_leaves_size();
              for (const auto& msg : this_._internal_leaves()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .Leaf leaf = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.leaf_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Mid::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Mid*>(&to_msg);
  auto& from = static_cast<const Mid&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Mid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_leaves()->MergeFrom(
      from._internal_leaves());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.leaf_ != nullptr);
    if (_this->_impl_.leaf_ == nullptr) {
      _this->_impl_.leaf_ =
          ::google::protobuf::Message::CopyConstruct<::Leaf>(arena, *from._impl_.leaf_);
    } else {
      _this->_impl_.leaf_->MergeFrom(*from._impl_.leaf_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Mid::CopyFrom(const Mid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Mid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Mid::InternalSwap(Mid* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.leaves_.InternalSwap(&other->_impl_.leaves_);
  swap(_impl_.leaf_, other->_impl_.leaf_);
}

::google::protobuf::Metadata Mid::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Outer::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Outer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Outer, _impl_._has_bits_);
};

Outer::Outer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Outer)
}
inline PROTOBUF_NDEBUG_INLINE Outer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Outer& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mids_{visibility, arena, from.mids_} {}

Outer::Outer(
    ::google::protobuf::Arena* arena,
    const Outer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Outer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mid_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Mid>(
                              arena, *from._impl_.mid_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:Outer)
}
inline PROTOBUF_NDEBUG_INLINE Outer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mids_{visibility, arena} {}

inline void Outer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mid_ = {};
}
Outer::~Outer() {
  // @@protoc_insertion_point(destructor:Outer)
  SharedDtor(*this);
}
inline void Outer::SharedDtor(MessageLite& self) {
  Outer& this_ = static_cast<Outer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mid_;
  this_._impl_.~Impl_();
}

inline void* Outer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Outer(arena);
}
constexpr auto Outer::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Outer, _impl_.mids_) +
          decltype(Outer::_impl_.mids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Outer), alignof(Outer), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Outer::PlacementNew_,
                                 sizeof(Outer),
                                 alignof(Outer));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Outer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Outer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Outer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Outer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Outer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Outer>(), &Outer::ByteSizeLong,
            &Outer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Outer, _impl_._cached_size_),
        false,
    },
    &Outer::kDescriptorMethods,
    &descriptor_table_nested_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Outer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Outer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Outer, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Outer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Mid mids = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Outer, _impl_.mids_)}},
    // .Mid mid = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Outer, _impl_.mid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Mid mid = 1;
    {PROTOBUF_FIELD_OFFSET(Outer, _impl_.mid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Mid mids = 2;
    {PROTOBUF_FIELD_OFFSET(Outer, _impl_.mids_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Mid>()},
    {::_pbi::TcParser::GetTable<::Mid>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Outer::Clear() {
// @@protoc_insertion_point(message_clear_start:Outer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mid_ != nullptr);
    _impl_.mid_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Outer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Outer& this_ = static_cast<const Outer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Outer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Outer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Outer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Mid mid = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.mid_, this_._impl_.mid_->GetCachedSize(), target,
                stream);
          }

          // repeated .Mid mids = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_mids_size());
               i < n; i++) {
            const auto& repfield = this_._internal_mids().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Outer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Outer::ByteSizeLong(const MessageLite& base) {
          const Outer& this_ = static_cast<const Outer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Outer::ByteSizeLong() const {
          const Outer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Outer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Mid mids = 2;
            {
              total_size += 1UL * this_._internal_mids_size();
              for (const auto& msg : this_._internal_mids()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .Mid mid = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mid_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Outer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Outer*>(&to_msg);
  auto& from = static_cast<const Outer&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Outer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mids()->MergeFrom(
      from._internal_mids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.mid_ != nullptr);
    if (_this->_impl_.mid_ == nullptr) {
      _this->_impl_.mid_ =
          ::google::protobuf::Message::CopyConstruct<::Mid>(arena, *from._impl_.mid_);
    } else {
      _this->_impl_.mid_->MergeFrom(*from._impl_.mid_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Outer::CopyFrom(const Outer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Outer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Outer::InternalSwap(Outer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.mids_.InternalSwap(&other->_impl_.mids_);
  swap(_impl_.mid_, other->_impl_.mid_);
}

::google::protobuf::Metadata Outer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NestedAll::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NestedAll>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NestedAll, _impl_._has_bits_);
};

NestedAll::NestedAll(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NestedAll)
}
inline PROTOBUF_NDEBUG_INLINE NestedAll::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NestedAll& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        forest_{visibility, arena, from.forest_} {}

NestedAll::NestedAll(
    ::google::protobuf::Arena* arena,
    const NestedAll& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NestedAll* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.root_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Outer>(
                              arena, *from._impl_.root_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:NestedAll)
}
inline PROTOBUF_NDEBUG_INLINE NestedAll::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        forest_{visibility, arena} {}

inline void NestedAll::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.root_ = {};
}
NestedAll::~NestedAll() {
  // @@protoc_insertion_point(destructor:NestedAll)
  SharedDtor(*this);
}
inline void NestedAll::SharedDtor(MessageLite& self) {
  NestedAll& this_ = static_cast<NestedAll&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.root_;
  this_._impl_.~Impl_();
}

inline void* NestedAll::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NestedAll(arena);
}
constexpr auto NestedAll::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NestedAll, _impl_.forest_) +
          decltype(NestedAll::_impl_.forest_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NestedAll), alignof(NestedAll), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NestedAll::PlacementNew_,
                                 sizeof(NestedAll),
                                 alignof(NestedAll));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NestedAll::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NestedAll_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NestedAll::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NestedAll>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NestedAll::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NestedAll>(), &NestedAll::ByteSizeLong,
            &NestedAll::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NestedAll, _impl_._cached_size_),
        false,
    },
    &NestedAll::kDescriptorMethods,
    &descriptor_table_nested_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NestedAll::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> NestedAll::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NestedAll, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NestedAll>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Outer forest = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(NestedAll, _impl_.forest_)}},
    // .Outer root = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NestedAll, _impl_.root_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Outer root = 1;
    {PROTOBUF_FIELD_OFFSET(NestedAll, _impl_.root_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Outer forest = 2;
    {PROTOBUF_FIELD_OFFSET(NestedAll, _impl_.forest_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Outer>()},
    {::_pbi::TcParser::GetTable<::Outer>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NestedAll::Clear() {
// @@protoc_insertion_point(message_clear_start:NestedAll)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.forest_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.root_ != nullptr);
    _impl_.root_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NestedAll::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NestedAll& this_ = static_cast<const NestedAll&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NestedAll::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NestedAll& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NestedAll)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Outer root = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.root_, this_._impl_.root_->GetCachedSize(), target,
                stream);
          }

          // repeated .Outer forest = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_forest_size());
               i < n; i++) {
            const auto& repfield = this_._internal_forest().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NestedAll)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NestedAll::ByteSizeLong(const MessageLite& base) {
          const NestedAll& this_ = static_cast<const NestedAll&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NestedAll::ByteSizeLong() const {
          const NestedAll& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NestedAll)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Outer forest = 2;
            {
              total_size += 1UL * this_._internal_forest_size();
              for (const auto& msg : this_._internal_forest()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .Outer root = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.root_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NestedAll::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NestedAll*>(&to_msg);
  auto& from = static_cast<const NestedAll&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NestedAll)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_forest()->MergeFrom(
      from._internal_forest());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.root_ != nullptr);
    if (_this->_impl_.root_ == nullptr) {
      _this->_impl_.root_ =
          ::google::protobuf::Message::CopyConstruct<::Outer>(arena, *from._impl_.root_);
    } else {
      _this->_impl_.root_->MergeFrom(*from._impl_.root_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NestedAll::CopyFrom(const NestedAll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NestedAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NestedAll::InternalSwap(NestedAll* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.forest_.InternalSwap(&other->_impl_.forest_);
  swap(_impl_.root_, other->_impl_.root_);
}

::google::protobuf::Metadata NestedAll::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_nested_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
